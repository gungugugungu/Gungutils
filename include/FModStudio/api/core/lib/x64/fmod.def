;
; Definition file of fmod.dll
; Automatic generated by gendef
; written by Kai Tietz 2008
;
LIBRARY "fmod.dll"
EXPORTS
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::addDSP(int,class FMOD::DSP *__ptr64)__ptr64 
?addDSP@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAVDSP@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::addFadePoint(unsigned __int64,float)__ptr64 
?addFadePoint@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@_KM@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelGroup::addGroup(class FMOD::ChannelGroup *__ptr64,bool,class FMOD::DSPConnection *__ptr64 *__ptr64)__ptr64 
?addGroup@ChannelGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEAV12@_NPEAPEAVDSPConnection@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::addInput(class FMOD::DSP *__ptr64,class FMOD::DSPConnection *__ptr64 *__ptr64,enum FMOD_DSPCONNECTION_TYPE)__ptr64 
?addInput@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAV12@PEAPEAVDSPConnection@2@W4FMOD_DSPCONNECTION_TYPE@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::addPolygon(float,float,bool,int,struct FMOD_VECTOR const *__ptr64,int *__ptr64)__ptr64 
?addPolygon@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@MM_NHPEBUFMOD_VECTOR@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::addSyncPoint(unsigned int,unsigned int,char const *__ptr64,struct FMOD_SYNCPOINT *__ptr64 *__ptr64)__ptr64 
?addSyncPoint@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@IIPEBDPEAPEAUFMOD_SYNCPOINT@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::attachChannelGroupToPort(enum FMOD_PORT_TYPE,unsigned __int64,class FMOD::ChannelGroup *__ptr64,bool)__ptr64 
?attachChannelGroupToPort@System@FMOD@@QEAA?AW4FMOD_RESULT@@W4FMOD_PORT_TYPE@@_KPEAVChannelGroup@2@_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::attachFileSystem(enum FMOD_RESULT(__cdecl *)(char const *__ptr64,unsigned int *__ptr64,void *__ptr64 *__ptr64,void *__ptr64),enum FMOD_RESULT(__cdecl *)(void *__ptr64,void *__ptr64),enum FMOD_RESULT(__cdecl *)(void *__ptr64,void *__ptr64,unsigned int,unsigned int *__ptr64,void *__ptr64),enum FMOD_RESULT(__cdecl *)(void *__ptr64,unsigned int,void *__ptr64))__ptr64 
?attachFileSystem@System@FMOD@@QEAA?AW4FMOD_RESULT@@P6A?AW43@PEBDPEAIPEAPEAXPEAX@ZP6A?AW43@33@ZP6A?AW43@33I13@ZP6A?AW43@3I3@Z@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::close(void)__ptr64 
?close@System@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::System::createChannelGroup(char const *__ptr64,class FMOD::ChannelGroup *__ptr64 *__ptr64)__ptr64 
?createChannelGroup@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEBDPEAPEAVChannelGroup@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::SystemI::createClientProfile(void)__ptr64 
?createClientProfile@SystemI@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::System::createDSP(struct FMOD_DSP_DESCRIPTION const *__ptr64,class FMOD::DSP *__ptr64 *__ptr64)__ptr64 
?createDSP@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEBUFMOD_DSP_DESCRIPTION@@PEAPEAVDSP@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::createDSPByPlugin(unsigned int,class FMOD::DSP *__ptr64 *__ptr64)__ptr64 
?createDSPByPlugin@System@FMOD@@QEAA?AW4FMOD_RESULT@@IPEAPEAVDSP@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::createDSPByType(enum FMOD_DSP_TYPE,class FMOD::DSP *__ptr64 *__ptr64)__ptr64 
?createDSPByType@System@FMOD@@QEAA?AW4FMOD_RESULT@@W4FMOD_DSP_TYPE@@PEAPEAVDSP@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::createDSPConnection(enum FMOD_DSPCONNECTION_TYPE,class FMOD::DSPConnection *__ptr64 *__ptr64)__ptr64 
?createDSPConnection@System@FMOD@@QEAA?AW4FMOD_RESULT@@W4FMOD_DSPCONNECTION_TYPE@@PEAPEAVDSPConnection@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::SystemI::createDiskFile(char const *__ptr64,struct FMOD_CREATESOUNDEXINFO *__ptr64,class FMOD::File *__ptr64 *__ptr64,bool *__ptr64)__ptr64 
?createDiskFile@SystemI@FMOD@@QEAA?AW4FMOD_RESULT@@PEBDPEAUFMOD_CREATESOUNDEXINFO@@PEAPEAVFile@2@PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::createGeometry(int,int,class FMOD::Geometry *__ptr64 *__ptr64)__ptr64 
?createGeometry@System@FMOD@@QEAA?AW4FMOD_RESULT@@HHPEAPEAVGeometry@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::SystemI::createMemoryFile(class FMOD::File *__ptr64 *__ptr64)__ptr64 
?createMemoryFile@SystemI@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAVFile@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::createReverb3D(class FMOD::Reverb3D *__ptr64 *__ptr64)__ptr64 
?createReverb3D@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAVReverb3D@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::createSound(char const *__ptr64,unsigned int,struct FMOD_CREATESOUNDEXINFO *__ptr64,class FMOD::Sound *__ptr64 *__ptr64)__ptr64 
?createSound@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEBDIPEAUFMOD_CREATESOUNDEXINFO@@PEAPEAVSound@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::createSoundGroup(char const *__ptr64,class FMOD::SoundGroup *__ptr64 *__ptr64)__ptr64 
?createSoundGroup@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEBDPEAPEAVSoundGroup@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::createStream(char const *__ptr64,unsigned int,struct FMOD_CREATESOUNDEXINFO *__ptr64,class FMOD::Sound *__ptr64 *__ptr64)__ptr64 
?createStream@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEBDIPEAUFMOD_CREATESOUNDEXINFO@@PEAPEAVSound@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::deleteSyncPoint(struct FMOD_SYNCPOINT *__ptr64)__ptr64 
?deleteSyncPoint@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_SYNCPOINT@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::detachChannelGroupFromPort(class FMOD::ChannelGroup *__ptr64)__ptr64 
?detachChannelGroupFromPort@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAVChannelGroup@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::disconnectAll(bool,bool)__ptr64 
?disconnectAll@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@_N0@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::disconnectFrom(class FMOD::DSP *__ptr64,class FMOD::DSPConnection *__ptr64)__ptr64 
?disconnectFrom@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAV12@PEAVDSPConnection@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::get3DAttributes(struct FMOD_VECTOR *__ptr64,struct FMOD_VECTOR *__ptr64)__ptr64 
?get3DAttributes@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_VECTOR@@0@Z
; public: enum FMOD_RESULT __cdecl FMOD::Reverb3D::get3DAttributes(struct FMOD_VECTOR *__ptr64,float *__ptr64,float *__ptr64)__ptr64 
?get3DAttributes@Reverb3D@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_VECTOR@@PEAM1@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::get3DConeOrientation(struct FMOD_VECTOR *__ptr64)__ptr64 
?get3DConeOrientation@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_VECTOR@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::get3DConeSettings(float *__ptr64,float *__ptr64,float *__ptr64)__ptr64 
?get3DConeSettings@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM00@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::get3DConeSettings(float *__ptr64,float *__ptr64,float *__ptr64)__ptr64 
?get3DConeSettings@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM00@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::get3DCustomRolloff(struct FMOD_VECTOR *__ptr64 *__ptr64,int *__ptr64)__ptr64 
?get3DCustomRolloff@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAUFMOD_VECTOR@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::get3DCustomRolloff(struct FMOD_VECTOR *__ptr64 *__ptr64,int *__ptr64)__ptr64 
?get3DCustomRolloff@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAUFMOD_VECTOR@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::get3DDistanceFilter(bool *__ptr64,float *__ptr64,float *__ptr64)__ptr64 
?get3DDistanceFilter@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_NPEAM1@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::get3DDopplerLevel(float *__ptr64)__ptr64 
?get3DDopplerLevel@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::get3DLevel(float *__ptr64)__ptr64 
?get3DLevel@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::get3DListenerAttributes(int,struct FMOD_VECTOR *__ptr64,struct FMOD_VECTOR *__ptr64,struct FMOD_VECTOR *__ptr64,struct FMOD_VECTOR *__ptr64)__ptr64 
?get3DListenerAttributes@System@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAUFMOD_VECTOR@@000@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::get3DMinMaxDistance(float *__ptr64,float *__ptr64)__ptr64 
?get3DMinMaxDistance@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM0@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::get3DMinMaxDistance(float *__ptr64,float *__ptr64)__ptr64 
?get3DMinMaxDistance@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM0@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::get3DNumListeners(int *__ptr64)__ptr64 
?get3DNumListeners@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::get3DOcclusion(float *__ptr64,float *__ptr64)__ptr64 
?get3DOcclusion@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM0@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::get3DSettings(float *__ptr64,float *__ptr64,float *__ptr64)__ptr64 
?get3DSettings@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM00@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::get3DSpread(float *__ptr64)__ptr64 
?get3DSpread@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getActive(bool *__ptr64)__ptr64 
?getActive@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::getActive(bool *__ptr64)__ptr64 
?getActive@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::Reverb3D::getActive(bool *__ptr64)__ptr64 
?getActive@Reverb3D@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getAdvancedSettings(struct FMOD_ADVANCEDSETTINGS *__ptr64)__ptr64 
?getAdvancedSettings@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_ADVANCEDSETTINGS@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getAudibility(float *__ptr64)__ptr64 
?getAudibility@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getBypass(bool *__ptr64)__ptr64 
?getBypass@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getCPUUsage(unsigned int *__ptr64,unsigned int *__ptr64)__ptr64 
?getCPUUsage@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAI0@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getCPUUsage(struct FMOD_CPU_USAGE *__ptr64)__ptr64 
?getCPUUsage@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_CPU_USAGE@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelGroup::getChannel(int,class FMOD::Channel *__ptr64 *__ptr64)__ptr64 
?getChannel@ChannelGroup@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAPEAVChannel@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getChannel(int,class FMOD::Channel *__ptr64 *__ptr64)__ptr64 
?getChannel@System@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAPEAVChannel@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getChannelFormat(unsigned int *__ptr64,int *__ptr64,enum FMOD_SPEAKERMODE *__ptr64)__ptr64 
?getChannelFormat@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAIPEAHPEAW4FMOD_SPEAKERMODE@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::getChannelGroup(class FMOD::ChannelGroup *__ptr64 *__ptr64)__ptr64 
?getChannelGroup@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAVChannelGroup@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getChannelsPlaying(int *__ptr64,int *__ptr64)__ptr64 
?getChannelsPlaying@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH0@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::getCurrentSound(class FMOD::Sound *__ptr64 *__ptr64)__ptr64 
?getCurrentSound@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAVSound@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getDSP(int,class FMOD::DSP *__ptr64 *__ptr64)__ptr64 
?getDSP@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAPEAVDSP@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getDSPBufferSize(unsigned int *__ptr64,int *__ptr64)__ptr64 
?getDSPBufferSize@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAIPEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getDSPClock(unsigned __int64 *__ptr64,unsigned __int64 *__ptr64)__ptr64 
?getDSPClock@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_K0@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getDSPIndex(class FMOD::DSP *__ptr64,int *__ptr64)__ptr64 
?getDSPIndex@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAVDSP@2@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getDSPInfoByPlugin(unsigned int,struct FMOD_DSP_DESCRIPTION const *__ptr64 *__ptr64)__ptr64 
?getDSPInfoByPlugin@System@FMOD@@QEAA?AW4FMOD_RESULT@@IPEAPEBUFMOD_DSP_DESCRIPTION@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getDSPInfoByType(enum FMOD_DSP_TYPE,struct FMOD_DSP_DESCRIPTION const *__ptr64 *__ptr64)__ptr64 
?getDSPInfoByType@System@FMOD@@QEAA?AW4FMOD_RESULT@@W4FMOD_DSP_TYPE@@PEAPEBUFMOD_DSP_DESCRIPTION@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getDataParameterIndex(int,int *__ptr64)__ptr64 
?getDataParameterIndex@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getDefaultMixMatrix(enum FMOD_SPEAKERMODE,enum FMOD_SPEAKERMODE,float *__ptr64,int)__ptr64 
?getDefaultMixMatrix@System@FMOD@@QEAA?AW4FMOD_RESULT@@W4FMOD_SPEAKERMODE@@0PEAMH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getDefaults(float *__ptr64,int *__ptr64)__ptr64 
?getDefaults@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAMPEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getDelay(unsigned __int64 *__ptr64,unsigned __int64 *__ptr64,bool *__ptr64)__ptr64 
?getDelay@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_K0PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getDriver(int *__ptr64)__ptr64 
?getDriver@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getDriverInfo(int,char *__ptr64,int,struct FMOD_GUID *__ptr64,int *__ptr64,enum FMOD_SPEAKERMODE *__ptr64,int *__ptr64)__ptr64 
?getDriverInfo@System@FMOD@@QEAA?AW4FMOD_RESULT@@HPEADHPEAUFMOD_GUID@@PEAHPEAW4FMOD_SPEAKERMODE@@2@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getFadePoints(unsigned int *__ptr64,unsigned __int64 *__ptr64,float *__ptr64)__ptr64 
?getFadePoints@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAIPEA_KPEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getFileUsage(__int64 *__ptr64,__int64 *__ptr64,__int64 *__ptr64)__ptr64 
?getFileUsage@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_J00@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getFormat(enum FMOD_SOUND_TYPE *__ptr64,enum FMOD_SOUND_FORMAT *__ptr64,int *__ptr64,int *__ptr64)__ptr64 
?getFormat@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAW4FMOD_SOUND_TYPE@@PEAW4FMOD_SOUND_FORMAT@@PEAH2@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::getFrequency(float *__ptr64)__ptr64 
?getFrequency@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getGeometryOcclusion(struct FMOD_VECTOR const *__ptr64,struct FMOD_VECTOR const *__ptr64,float *__ptr64,float *__ptr64)__ptr64 
?getGeometryOcclusion@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEBUFMOD_VECTOR@@0PEAM1@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getGeometrySettings(float *__ptr64)__ptr64 
?getGeometrySettings@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM@Z
; void __cdecl FMOD::getGlobals(class FMOD::Global *__ptr64 *__ptr64)
?getGlobals@FMOD@@YAXPEAPEAVGlobal@1@@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelGroup::getGroup(int,class FMOD::ChannelGroup *__ptr64 *__ptr64)__ptr64 
?getGroup@ChannelGroup@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAPEAV12@@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getIdle(bool *__ptr64)__ptr64 
?getIdle@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::getIndex(int *__ptr64)__ptr64 
?getIndex@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getInfo(char *__ptr64,unsigned int *__ptr64,int *__ptr64,int *__ptr64,int *__ptr64)__ptr64 
?getInfo@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEADPEAIPEAH22@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getInput(int,class FMOD::DSP *__ptr64 *__ptr64,class FMOD::DSPConnection *__ptr64 *__ptr64)__ptr64 
?getInput@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAPEAV12@PEAPEAVDSPConnection@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSPConnection::getInput(class FMOD::DSP *__ptr64 *__ptr64)__ptr64 
?getInput@DSPConnection@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAVDSP@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getLength(unsigned int *__ptr64,unsigned int)__ptr64 
?getLength@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAII@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::getLoopCount(int *__ptr64)__ptr64 
?getLoopCount@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getLoopCount(int *__ptr64)__ptr64 
?getLoopCount@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::getLoopPoints(unsigned int *__ptr64,unsigned int,unsigned int *__ptr64,unsigned int)__ptr64 
?getLoopPoints@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@PEAII0I@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getLoopPoints(unsigned int *__ptr64,unsigned int,unsigned int *__ptr64,unsigned int)__ptr64 
?getLoopPoints@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAII0I@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getLowPassGain(float *__ptr64)__ptr64 
?getLowPassGain@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getMasterChannelGroup(class FMOD::ChannelGroup *__ptr64 *__ptr64)__ptr64 
?getMasterChannelGroup@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAVChannelGroup@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getMasterSoundGroup(class FMOD::SoundGroup *__ptr64 *__ptr64)__ptr64 
?getMasterSoundGroup@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAVSoundGroup@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::getMaxAudible(int *__ptr64)__ptr64 
?getMaxAudible@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::getMaxAudibleBehavior(enum FMOD_SOUNDGROUP_BEHAVIOR *__ptr64)__ptr64 
?getMaxAudibleBehavior@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEAW4FMOD_SOUNDGROUP_BEHAVIOR@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::getMaxPolygons(int *__ptr64,int *__ptr64)__ptr64 
?getMaxPolygons@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH0@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getMeteringEnabled(bool *__ptr64,bool *__ptr64)__ptr64 
?getMeteringEnabled@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_N0@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getMeteringInfo(struct FMOD_DSP_METERING_INFO *__ptr64,struct FMOD_DSP_METERING_INFO *__ptr64)__ptr64 
?getMeteringInfo@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_DSP_METERING_INFO@@0@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSPConnection::getMix(float *__ptr64)__ptr64 
?getMix@DSPConnection@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getMixMatrix(float *__ptr64,int *__ptr64,int *__ptr64,int)__ptr64 
?getMixMatrix@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAMPEAH1H@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSPConnection::getMixMatrix(float *__ptr64,int *__ptr64,int *__ptr64,int)__ptr64 
?getMixMatrix@DSPConnection@FMOD@@QEAA?AW4FMOD_RESULT@@PEAMPEAH1H@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getMode(unsigned int *__ptr64)__ptr64 
?getMode@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAI@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getMode(unsigned int *__ptr64)__ptr64 
?getMode@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAI@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getMusicChannelVolume(int,float *__ptr64)__ptr64 
?getMusicChannelVolume@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getMusicNumChannels(int *__ptr64)__ptr64 
?getMusicNumChannels@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getMusicSpeed(float *__ptr64)__ptr64 
?getMusicSpeed@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getMute(bool *__ptr64)__ptr64 
?getMute@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::getMuteFadeSpeed(float *__ptr64)__ptr64 
?getMuteFadeSpeed@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelGroup::getName(char *__ptr64,int)__ptr64 
?getName@ChannelGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEADH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getName(char *__ptr64,int)__ptr64 
?getName@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEADH@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::getName(char *__ptr64,int)__ptr64 
?getName@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEADH@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getNestedPlugin(unsigned int,int,unsigned int *__ptr64)__ptr64 
?getNestedPlugin@System@FMOD@@QEAA?AW4FMOD_RESULT@@IHPEAI@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getNetworkProxy(char *__ptr64,int)__ptr64 
?getNetworkProxy@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEADH@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getNetworkTimeout(int *__ptr64)__ptr64 
?getNetworkTimeout@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelGroup::getNumChannels(int *__ptr64)__ptr64 
?getNumChannels@ChannelGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getNumDSPs(int *__ptr64)__ptr64 
?getNumDSPs@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getNumDrivers(int *__ptr64)__ptr64 
?getNumDrivers@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelGroup::getNumGroups(int *__ptr64)__ptr64 
?getNumGroups@ChannelGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getNumInputs(int *__ptr64)__ptr64 
?getNumInputs@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getNumNestedPlugins(unsigned int,int *__ptr64)__ptr64 
?getNumNestedPlugins@System@FMOD@@QEAA?AW4FMOD_RESULT@@IPEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getNumOutputs(int *__ptr64)__ptr64 
?getNumOutputs@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getNumParameters(int *__ptr64)__ptr64 
?getNumParameters@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::getNumPlaying(int *__ptr64)__ptr64 
?getNumPlaying@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getNumPlugins(enum FMOD_PLUGINTYPE,int *__ptr64)__ptr64 
?getNumPlugins@System@FMOD@@QEAA?AW4FMOD_RESULT@@W4FMOD_PLUGINTYPE@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::getNumPolygons(int *__ptr64)__ptr64 
?getNumPolygons@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::getNumSounds(int *__ptr64)__ptr64 
?getNumSounds@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getNumSubSounds(int *__ptr64)__ptr64 
?getNumSubSounds@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getNumSyncPoints(int *__ptr64)__ptr64 
?getNumSyncPoints@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getNumTags(int *__ptr64,int *__ptr64)__ptr64 
?getNumTags@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH0@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getOpenState(enum FMOD_OPENSTATE *__ptr64,unsigned int *__ptr64,bool *__ptr64,bool *__ptr64)__ptr64 
?getOpenState@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAW4FMOD_OPENSTATE@@PEAIPEA_N2@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getOutput(int,class FMOD::DSP *__ptr64 *__ptr64,class FMOD::DSPConnection *__ptr64 *__ptr64)__ptr64 
?getOutput@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAPEAV12@PEAPEAVDSPConnection@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSPConnection::getOutput(class FMOD::DSP *__ptr64 *__ptr64)__ptr64 
?getOutput@DSPConnection@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAVDSP@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getOutput(enum FMOD_OUTPUTTYPE *__ptr64)__ptr64 
?getOutput@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAW4FMOD_OUTPUTTYPE@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getOutputByPlugin(unsigned int *__ptr64)__ptr64 
?getOutputByPlugin@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAI@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getOutputChannelFormat(unsigned int,int,enum FMOD_SPEAKERMODE,unsigned int *__ptr64,int *__ptr64,enum FMOD_SPEAKERMODE *__ptr64)__ptr64 
?getOutputChannelFormat@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@IHW4FMOD_SPEAKERMODE@@PEAIPEAHPEAW44@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getOutputHandle(void *__ptr64 *__ptr64)__ptr64 
?getOutputHandle@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getParameterBool(int,bool *__ptr64,char *__ptr64,int)__ptr64 
?getParameterBool@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@HPEA_NPEADH@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getParameterData(int,void *__ptr64 *__ptr64,unsigned int *__ptr64,char *__ptr64,int)__ptr64 
?getParameterData@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAPEAXPEAIPEADH@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getParameterFloat(int,float *__ptr64,char *__ptr64,int)__ptr64 
?getParameterFloat@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAMPEADH@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getParameterInfo(int,struct FMOD_DSP_PARAMETER_DESC *__ptr64 *__ptr64)__ptr64 
?getParameterInfo@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAPEAUFMOD_DSP_PARAMETER_DESC@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getParameterInt(int,int *__ptr64,char *__ptr64,int)__ptr64 
?getParameterInt@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAHPEADH@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelGroup::getParentGroup(class FMOD::ChannelGroup *__ptr64 *__ptr64)__ptr64 
?getParentGroup@ChannelGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAV12@@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getPaused(bool *__ptr64)__ptr64 
?getPaused@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getPitch(float *__ptr64)__ptr64 
?getPitch@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getPluginHandle(enum FMOD_PLUGINTYPE,int,unsigned int *__ptr64)__ptr64 
?getPluginHandle@System@FMOD@@QEAA?AW4FMOD_RESULT@@W4FMOD_PLUGINTYPE@@HPEAI@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getPluginInfo(unsigned int,enum FMOD_PLUGINTYPE *__ptr64,char *__ptr64,int,unsigned int *__ptr64)__ptr64 
?getPluginInfo@System@FMOD@@QEAA?AW4FMOD_RESULT@@IPEAW4FMOD_PLUGINTYPE@@PEADHPEAI@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::getPolygonAttributes(int,float *__ptr64,float *__ptr64,bool *__ptr64)__ptr64 
?getPolygonAttributes@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAM0PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::getPolygonNumVertices(int,int *__ptr64)__ptr64 
?getPolygonNumVertices@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::getPolygonVertex(int,int,struct FMOD_VECTOR *__ptr64)__ptr64 
?getPolygonVertex@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@HHPEAUFMOD_VECTOR@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::getPosition(unsigned int *__ptr64,unsigned int)__ptr64 
?getPosition@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@PEAII@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::getPosition(struct FMOD_VECTOR *__ptr64)__ptr64 
?getPosition@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_VECTOR@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::getPriority(int *__ptr64)__ptr64 
?getPriority@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Reverb3D::getProperties(struct FMOD_REVERB_PROPERTIES *__ptr64)__ptr64 
?getProperties@Reverb3D@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_REVERB_PROPERTIES@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getRecordDriverInfo(int,char *__ptr64,int,struct FMOD_GUID *__ptr64,int *__ptr64,enum FMOD_SPEAKERMODE *__ptr64,int *__ptr64,unsigned int *__ptr64)__ptr64 
?getRecordDriverInfo@System@FMOD@@QEAA?AW4FMOD_RESULT@@HPEADHPEAUFMOD_GUID@@PEAHPEAW4FMOD_SPEAKERMODE@@2PEAI@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getRecordNumDrivers(int *__ptr64,int *__ptr64)__ptr64 
?getRecordNumDrivers@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH0@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getRecordPosition(int,unsigned int *__ptr64)__ptr64 
?getRecordPosition@System@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAI@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getReverbProperties(int,float *__ptr64)__ptr64 
?getReverbProperties@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getReverbProperties(int,struct FMOD_REVERB_PROPERTIES *__ptr64)__ptr64 
?getReverbProperties@System@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAUFMOD_REVERB_PROPERTIES@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::getRotation(struct FMOD_VECTOR *__ptr64,struct FMOD_VECTOR *__ptr64)__ptr64 
?getRotation@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_VECTOR@@0@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::getScale(struct FMOD_VECTOR *__ptr64)__ptr64 
?getScale@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_VECTOR@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getSoftwareChannels(int *__ptr64)__ptr64 
?getSoftwareChannels@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getSoftwareFormat(int *__ptr64,enum FMOD_SPEAKERMODE *__ptr64,int *__ptr64)__ptr64 
?getSoftwareFormat@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAHPEAW4FMOD_SPEAKERMODE@@0@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::getSound(int,class FMOD::Sound *__ptr64 *__ptr64)__ptr64 
?getSound@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAPEAVSound@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getSoundGroup(class FMOD::SoundGroup *__ptr64 *__ptr64)__ptr64 
?getSoundGroup@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAVSoundGroup@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getSpeakerModeChannels(enum FMOD_SPEAKERMODE,int *__ptr64)__ptr64 
?getSpeakerModeChannels@System@FMOD@@QEAA?AW4FMOD_RESULT@@W4FMOD_SPEAKERMODE@@PEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getSpeakerPosition(enum FMOD_SPEAKER,float *__ptr64,float *__ptr64,bool *__ptr64)__ptr64 
?getSpeakerPosition@System@FMOD@@QEAA?AW4FMOD_RESULT@@W4FMOD_SPEAKER@@PEAM1PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getStreamBufferSize(unsigned int *__ptr64,unsigned int *__ptr64)__ptr64 
?getStreamBufferSize@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAI0@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getSubSound(int,class FMOD::Sound *__ptr64 *__ptr64)__ptr64 
?getSubSound@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAPEAV12@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getSubSoundParent(class FMOD::Sound *__ptr64 *__ptr64)__ptr64 
?getSubSoundParent@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAV12@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getSyncPoint(int,struct FMOD_SYNCPOINT *__ptr64 *__ptr64)__ptr64 
?getSyncPoint@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAPEAUFMOD_SYNCPOINT@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getSyncPointInfo(struct FMOD_SYNCPOINT *__ptr64,char *__ptr64,int,unsigned int *__ptr64,unsigned int)__ptr64 
?getSyncPointInfo@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_SYNCPOINT@@PEADHPEAII@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getSystemObject(class FMOD::System *__ptr64 *__ptr64)__ptr64 
?getSystemObject@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAVSystem@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getSystemObject(class FMOD::System *__ptr64 *__ptr64)__ptr64 
?getSystemObject@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAVSystem@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getSystemObject(class FMOD::System *__ptr64 *__ptr64)__ptr64 
?getSystemObject@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAVSystem@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::getSystemObject(class FMOD::System *__ptr64 *__ptr64)__ptr64 
?getSystemObject@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAVSystem@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getTag(char const *__ptr64,int,struct FMOD_TAG *__ptr64)__ptr64 
?getTag@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEBDHPEAUFMOD_TAG@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getType(enum FMOD_DSP_TYPE *__ptr64)__ptr64 
?getType@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAW4FMOD_DSP_TYPE@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSPConnection::getType(enum FMOD_DSPCONNECTION_TYPE *__ptr64)__ptr64 
?getType@DSPConnection@FMOD@@QEAA?AW4FMOD_RESULT@@PEAW4FMOD_DSPCONNECTION_TYPE@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getUserData(void *__ptr64 *__ptr64)__ptr64 
?getUserData@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getUserData(void *__ptr64 *__ptr64)__ptr64 
?getUserData@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSPConnection::getUserData(void *__ptr64 *__ptr64)__ptr64 
?getUserData@DSPConnection@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::getUserData(void *__ptr64 *__ptr64)__ptr64 
?getUserData@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::GeometryI::getUserData(void *__ptr64 *__ptr64)__ptr64 
?getUserData@GeometryI@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::Reverb3D::getUserData(void *__ptr64 *__ptr64)__ptr64 
?getUserData@Reverb3D@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::getUserData(void *__ptr64 *__ptr64)__ptr64 
?getUserData@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::getUserData(void *__ptr64 *__ptr64)__ptr64 
?getUserData@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getUserData(void *__ptr64 *__ptr64)__ptr64 
?getUserData@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundI::getUserDataInternal(void *__ptr64 *__ptr64)__ptr64 
?getUserDataInternal@SoundI@FMOD@@QEAA?AW4FMOD_RESULT@@PEAPEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::getVersion(unsigned int *__ptr64,unsigned int *__ptr64)__ptr64 
?getVersion@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAI0@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getVolume(float *__ptr64)__ptr64 
?getVolume@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::getVolume(float *__ptr64)__ptr64 
?getVolume@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::getVolumeRamp(bool *__ptr64)__ptr64 
?getVolumeRamp@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::getWetDryMix(float *__ptr64,float *__ptr64,float *__ptr64)__ptr64 
?getWetDryMix@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAM00@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::init(int,unsigned int,void *__ptr64)__ptr64 
?init@System@FMOD@@QEAA?AW4FMOD_RESULT@@HIPEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::isPlaying(bool *__ptr64)__ptr64 
?isPlaying@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::isRecording(int,bool *__ptr64)__ptr64 
?isRecording@System@FMOD@@QEAA?AW4FMOD_RESULT@@HPEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::isVirtual(bool *__ptr64)__ptr64 
?isVirtual@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@PEA_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::loadGeometry(void const *__ptr64,int,class FMOD::Geometry *__ptr64 *__ptr64)__ptr64 
?loadGeometry@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEBXHPEAPEAVGeometry@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::loadPlugin(char const *__ptr64,unsigned int *__ptr64,unsigned int)__ptr64 
?loadPlugin@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEBDPEAII@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::lock(unsigned int,unsigned int,void *__ptr64 *__ptr64,void *__ptr64 *__ptr64,unsigned int *__ptr64,unsigned int *__ptr64)__ptr64 
?lock@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@IIPEAPEAX0PEAI1@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::lockDSP(void)__ptr64 
?lockDSP@System@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::System::mixerResume(void)__ptr64 
?mixerResume@System@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::System::mixerSuspend(void)__ptr64 
?mixerSuspend@System@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::System::playDSP(class FMOD::DSP *__ptr64,class FMOD::ChannelGroup *__ptr64,bool,class FMOD::Channel *__ptr64 *__ptr64)__ptr64 
?playDSP@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAVDSP@2@PEAVChannelGroup@2@_NPEAPEAVChannel@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::playSound(class FMOD::Sound *__ptr64,class FMOD::ChannelGroup *__ptr64,bool,class FMOD::Channel *__ptr64 *__ptr64)__ptr64 
?playSound@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAVSound@2@PEAVChannelGroup@2@_NPEAPEAVChannel@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::readData(void *__ptr64,unsigned int,unsigned int *__ptr64)__ptr64 
?readData@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAXIPEAI@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::recordStart(int,class FMOD::Sound *__ptr64,bool)__ptr64 
?recordStart@System@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAVSound@2@_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::recordStop(int)__ptr64 
?recordStop@System@FMOD@@QEAA?AW4FMOD_RESULT@@H@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::registerCodec(struct FMOD_CODEC_DESCRIPTION *__ptr64,unsigned int *__ptr64,unsigned int)__ptr64 
?registerCodec@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_CODEC_DESCRIPTION@@PEAII@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::registerDSP(struct FMOD_DSP_DESCRIPTION const *__ptr64,unsigned int *__ptr64)__ptr64 
?registerDSP@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEBUFMOD_DSP_DESCRIPTION@@PEAI@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::registerOutput(struct FMOD_OUTPUT_DESCRIPTION const *__ptr64,unsigned int *__ptr64)__ptr64 
?registerOutput@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEBUFMOD_OUTPUT_DESCRIPTION@@PEAI@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelGroup::release(void)__ptr64 
?release@ChannelGroup@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::DSP::release(void)__ptr64 
?release@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::release(void)__ptr64 
?release@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::Reverb3D::release(void)__ptr64 
?release@Reverb3D@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::Sound::release(void)__ptr64 
?release@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::release(void)__ptr64 
?release@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::System::release(void)__ptr64 
?release@System@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::removeDSP(class FMOD::DSP *__ptr64)__ptr64 
?removeDSP@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAVDSP@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::removeFadePoints(unsigned __int64,unsigned __int64)__ptr64 
?removeFadePoints@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@_K0@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::reset(void)__ptr64 
?reset@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::save(void *__ptr64,int *__ptr64)__ptr64 
?save@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@PEAXPEAH@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::seekData(unsigned int)__ptr64 
?seekData@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@I@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::set3DAttributes(struct FMOD_VECTOR const *__ptr64,struct FMOD_VECTOR const *__ptr64)__ptr64 
?set3DAttributes@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEBUFMOD_VECTOR@@0@Z
; public: enum FMOD_RESULT __cdecl FMOD::Reverb3D::set3DAttributes(struct FMOD_VECTOR const *__ptr64,float,float)__ptr64 
?set3DAttributes@Reverb3D@FMOD@@QEAA?AW4FMOD_RESULT@@PEBUFMOD_VECTOR@@MM@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::set3DConeOrientation(struct FMOD_VECTOR *__ptr64)__ptr64 
?set3DConeOrientation@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_VECTOR@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::set3DConeSettings(float,float,float)__ptr64 
?set3DConeSettings@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@MMM@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::set3DConeSettings(float,float,float)__ptr64 
?set3DConeSettings@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@MMM@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::set3DCustomRolloff(struct FMOD_VECTOR *__ptr64,int)__ptr64 
?set3DCustomRolloff@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_VECTOR@@H@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::set3DCustomRolloff(struct FMOD_VECTOR *__ptr64,int)__ptr64 
?set3DCustomRolloff@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_VECTOR@@H@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::set3DDistanceFilter(bool,float,float)__ptr64 
?set3DDistanceFilter@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@_NMM@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::set3DDopplerLevel(float)__ptr64 
?set3DDopplerLevel@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@M@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::set3DLevel(float)__ptr64 
?set3DLevel@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@M@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::set3DListenerAttributes(int,struct FMOD_VECTOR const *__ptr64,struct FMOD_VECTOR const *__ptr64,struct FMOD_VECTOR const *__ptr64,struct FMOD_VECTOR const *__ptr64)__ptr64 
?set3DListenerAttributes@System@FMOD@@QEAA?AW4FMOD_RESULT@@HPEBUFMOD_VECTOR@@000@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::set3DMinMaxDistance(float,float)__ptr64 
?set3DMinMaxDistance@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@MM@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::set3DMinMaxDistance(float,float)__ptr64 
?set3DMinMaxDistance@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@MM@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::set3DNumListeners(int)__ptr64 
?set3DNumListeners@System@FMOD@@QEAA?AW4FMOD_RESULT@@H@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::set3DOcclusion(float,float)__ptr64 
?set3DOcclusion@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@MM@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::set3DRolloffCallback(float(__cdecl *)(struct FMOD_CHANNELCONTROL *__ptr64,float))__ptr64 
?set3DRolloffCallback@System@FMOD@@QEAA?AW4FMOD_RESULT@@P6AMPEAUFMOD_CHANNELCONTROL@@M@Z@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::set3DSettings(float,float,float)__ptr64 
?set3DSettings@System@FMOD@@QEAA?AW4FMOD_RESULT@@MMM@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::set3DSpread(float)__ptr64 
?set3DSpread@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@M@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::setActive(bool)__ptr64 
?setActive@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::setActive(bool)__ptr64 
?setActive@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::Reverb3D::setActive(bool)__ptr64 
?setActive@Reverb3D@FMOD@@QEAA?AW4FMOD_RESULT@@_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setAdvancedSettings(struct FMOD_ADVANCEDSETTINGS *__ptr64)__ptr64 
?setAdvancedSettings@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAUFMOD_ADVANCEDSETTINGS@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::setBypass(bool)__ptr64 
?setBypass@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setCallback(enum FMOD_RESULT(__cdecl *)(struct FMOD_CHANNELCONTROL *__ptr64,enum FMOD_CHANNELCONTROL_TYPE,enum FMOD_CHANNELCONTROL_CALLBACK_TYPE,void *__ptr64,void *__ptr64))__ptr64 
?setCallback@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@P6A?AW43@PEAUFMOD_CHANNELCONTROL@@W4FMOD_CHANNELCONTROL_TYPE@@W4FMOD_CHANNELCONTROL_CALLBACK_TYPE@@PEAX3@Z@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::setCallback(enum FMOD_RESULT(__cdecl *)(struct FMOD_DSP *__ptr64,enum FMOD_DSP_CALLBACK_TYPE,void *__ptr64))__ptr64 
?setCallback@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@P6A?AW43@PEAUFMOD_DSP@@W4FMOD_DSP_CALLBACK_TYPE@@PEAX@Z@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setCallback(enum FMOD_RESULT(__cdecl *)(struct FMOD_SYSTEM *__ptr64,unsigned int,void *__ptr64,void *__ptr64,void *__ptr64),unsigned int)__ptr64 
?setCallback@System@FMOD@@QEAA?AW4FMOD_RESULT@@P6A?AW43@PEAUFMOD_SYSTEM@@IPEAX11@ZI@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::setChannelFormat(unsigned int,int,enum FMOD_SPEAKERMODE)__ptr64 
?setChannelFormat@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@IHW4FMOD_SPEAKERMODE@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::setChannelGroup(class FMOD::ChannelGroup *__ptr64)__ptr64 
?setChannelGroup@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@PEAVChannelGroup@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setDSPBufferSize(unsigned int,int)__ptr64 
?setDSPBufferSize@System@FMOD@@QEAA?AW4FMOD_RESULT@@IH@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setDSPIndex(class FMOD::DSP *__ptr64,int)__ptr64 
?setDSPIndex@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAVDSP@2@H@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::setDefaults(float,int)__ptr64 
?setDefaults@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@MH@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setDelay(unsigned __int64,unsigned __int64,bool)__ptr64 
?setDelay@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@_K0_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setDriver(int)__ptr64 
?setDriver@System@FMOD@@QEAA?AW4FMOD_RESULT@@H@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setFadePointRamp(unsigned __int64,float)__ptr64 
?setFadePointRamp@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@_KM@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setFileSystem(enum FMOD_RESULT(__cdecl *)(char const *__ptr64,unsigned int *__ptr64,void *__ptr64 *__ptr64,void *__ptr64),enum FMOD_RESULT(__cdecl *)(void *__ptr64,void *__ptr64),enum FMOD_RESULT(__cdecl *)(void *__ptr64,void *__ptr64,unsigned int,unsigned int *__ptr64,void *__ptr64),enum FMOD_RESULT(__cdecl *)(void *__ptr64,unsigned int,void *__ptr64),enum FMOD_RESULT(__cdecl *)(struct FMOD_ASYNCREADINFO *__ptr64,void *__ptr64),enum FMOD_RESULT(__cdecl *)(struct FMOD_ASYNCREADINFO *__ptr64,void *__ptr64),int)__ptr64 
?setFileSystem@System@FMOD@@QEAA?AW4FMOD_RESULT@@P6A?AW43@PEBDPEAIPEAPEAXPEAX@ZP6A?AW43@33@ZP6A?AW43@33I13@ZP6A?AW43@3I3@ZP6A?AW43@PEAUFMOD_ASYNCREADINFO@@3@Z9H@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::setFrequency(float)__ptr64 
?setFrequency@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@M@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setGeometrySettings(float)__ptr64 
?setGeometrySettings@System@FMOD@@QEAA?AW4FMOD_RESULT@@M@Z
; public: enum FMOD_RESULT __cdecl FMOD::SystemI::setInternalCallback(int,enum FMOD_RESULT(__cdecl *)(struct FMOD_SYSTEM *__ptr64,unsigned int,void *__ptr64,void *__ptr64,void *__ptr64),void *__ptr64)__ptr64 
?setInternalCallback@SystemI@FMOD@@QEAA?AW4FMOD_RESULT@@HP6A?AW43@PEAUFMOD_SYSTEM@@IPEAX11@Z1@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::setLoopCount(int)__ptr64 
?setLoopCount@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@H@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::setLoopCount(int)__ptr64 
?setLoopCount@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@H@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::setLoopPoints(unsigned int,unsigned int,unsigned int,unsigned int)__ptr64 
?setLoopPoints@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@IIII@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::setLoopPoints(unsigned int,unsigned int,unsigned int,unsigned int)__ptr64 
?setLoopPoints@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@IIII@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setLowPassGain(float)__ptr64 
?setLowPassGain@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@M@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::setMaxAudible(int)__ptr64 
?setMaxAudible@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@H@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::setMaxAudibleBehavior(enum FMOD_SOUNDGROUP_BEHAVIOR)__ptr64 
?setMaxAudibleBehavior@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@W4FMOD_SOUNDGROUP_BEHAVIOR@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::setMeteringEnabled(bool,bool)__ptr64 
?setMeteringEnabled@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@_N0@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSPConnection::setMix(float)__ptr64 
?setMix@DSPConnection@FMOD@@QEAA?AW4FMOD_RESULT@@M@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setMixLevelsInput(float *__ptr64,int)__ptr64 
?setMixLevelsInput@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAMH@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setMixLevelsOutput(float,float,float,float,float,float,float,float)__ptr64 
?setMixLevelsOutput@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@MMMMMMMM@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setMixMatrix(float *__ptr64,int,int,int)__ptr64 
?setMixMatrix@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAMHHH@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSPConnection::setMixMatrix(float *__ptr64,int,int,int)__ptr64 
?setMixMatrix@DSPConnection@FMOD@@QEAA?AW4FMOD_RESULT@@PEAMHHH@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setMode(unsigned int)__ptr64 
?setMode@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@I@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::setMode(unsigned int)__ptr64 
?setMode@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@I@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::setMusicChannelVolume(int,float)__ptr64 
?setMusicChannelVolume@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@HM@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::setMusicSpeed(float)__ptr64 
?setMusicSpeed@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@M@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setMute(bool)__ptr64 
?setMute@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::setMuteFadeSpeed(float)__ptr64 
?setMuteFadeSpeed@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@M@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setNetworkProxy(char const *__ptr64)__ptr64 
?setNetworkProxy@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEBD@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setNetworkTimeout(int)__ptr64 
?setNetworkTimeout@System@FMOD@@QEAA?AW4FMOD_RESULT@@H@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setOutput(enum FMOD_OUTPUTTYPE)__ptr64 
?setOutput@System@FMOD@@QEAA?AW4FMOD_RESULT@@W4FMOD_OUTPUTTYPE@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setOutputByPlugin(unsigned int)__ptr64 
?setOutputByPlugin@System@FMOD@@QEAA?AW4FMOD_RESULT@@I@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setPan(float)__ptr64 
?setPan@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@M@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::setParameterBool(int,bool)__ptr64 
?setParameterBool@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@H_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::setParameterData(int,void *__ptr64,unsigned int)__ptr64 
?setParameterData@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@HPEAXI@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::setParameterFloat(int,float)__ptr64 
?setParameterFloat@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@HM@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::setParameterInt(int,int)__ptr64 
?setParameterInt@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@HH@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setPaused(bool)__ptr64 
?setPaused@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setPitch(float)__ptr64 
?setPitch@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@M@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setPluginPath(char const *__ptr64)__ptr64 
?setPluginPath@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEBD@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::setPolygonAttributes(int,float,float,bool)__ptr64 
?setPolygonAttributes@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@HMM_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::setPolygonVertex(int,int,struct FMOD_VECTOR const *__ptr64)__ptr64 
?setPolygonVertex@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@HHPEBUFMOD_VECTOR@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::setPosition(unsigned int,unsigned int)__ptr64 
?setPosition@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@II@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::setPosition(struct FMOD_VECTOR const *__ptr64)__ptr64 
?setPosition@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@PEBUFMOD_VECTOR@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Channel::setPriority(int)__ptr64 
?setPriority@Channel@FMOD@@QEAA?AW4FMOD_RESULT@@H@Z
; public: enum FMOD_RESULT __cdecl FMOD::Reverb3D::setProperties(struct FMOD_REVERB_PROPERTIES const *__ptr64)__ptr64 
?setProperties@Reverb3D@FMOD@@QEAA?AW4FMOD_RESULT@@PEBUFMOD_REVERB_PROPERTIES@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setReverbProperties(int,float)__ptr64 
?setReverbProperties@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@HM@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setReverbProperties(int,struct FMOD_REVERB_PROPERTIES const *__ptr64)__ptr64 
?setReverbProperties@System@FMOD@@QEAA?AW4FMOD_RESULT@@HPEBUFMOD_REVERB_PROPERTIES@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::setRotation(struct FMOD_VECTOR const *__ptr64,struct FMOD_VECTOR const *__ptr64)__ptr64 
?setRotation@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@PEBUFMOD_VECTOR@@0@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::setScale(struct FMOD_VECTOR const *__ptr64)__ptr64 
?setScale@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@PEBUFMOD_VECTOR@@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setSoftwareChannels(int)__ptr64 
?setSoftwareChannels@System@FMOD@@QEAA?AW4FMOD_RESULT@@H@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setSoftwareFormat(int,enum FMOD_SPEAKERMODE,int)__ptr64 
?setSoftwareFormat@System@FMOD@@QEAA?AW4FMOD_RESULT@@HW4FMOD_SPEAKERMODE@@H@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::setSoundGroup(class FMOD::SoundGroup *__ptr64)__ptr64 
?setSoundGroup@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAVSoundGroup@2@@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setSpeakerPosition(enum FMOD_SPEAKER,float,float,bool)__ptr64 
?setSpeakerPosition@System@FMOD@@QEAA?AW4FMOD_RESULT@@W4FMOD_SPEAKER@@MM_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setStreamBufferSize(unsigned int,unsigned int)__ptr64 
?setStreamBufferSize@System@FMOD@@QEAA?AW4FMOD_RESULT@@II@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setUserData(void *__ptr64)__ptr64 
?setUserData@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@PEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::setUserData(void *__ptr64)__ptr64 
?setUserData@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSPConnection::setUserData(void *__ptr64)__ptr64 
?setUserData@DSPConnection@FMOD@@QEAA?AW4FMOD_RESULT@@PEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::Geometry::setUserData(void *__ptr64)__ptr64 
?setUserData@Geometry@FMOD@@QEAA?AW4FMOD_RESULT@@PEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::GeometryI::setUserData(void *__ptr64)__ptr64 
?setUserData@GeometryI@FMOD@@QEAA?AW4FMOD_RESULT@@PEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::Reverb3D::setUserData(void *__ptr64)__ptr64 
?setUserData@Reverb3D@FMOD@@QEAA?AW4FMOD_RESULT@@PEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::setUserData(void *__ptr64)__ptr64 
?setUserData@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::setUserData(void *__ptr64)__ptr64 
?setUserData@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@PEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::setUserData(void *__ptr64)__ptr64 
?setUserData@System@FMOD@@QEAA?AW4FMOD_RESULT@@PEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundI::setUserDataInternal(void *__ptr64)__ptr64 
?setUserDataInternal@SoundI@FMOD@@QEAA?AW4FMOD_RESULT@@PEAX@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setVolume(float)__ptr64 
?setVolume@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@M@Z
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::setVolume(float)__ptr64 
?setVolume@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@M@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::setVolumeRamp(bool)__ptr64 
?setVolumeRamp@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::setWetDryMix(float,float,float)__ptr64 
?setWetDryMix@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@MMM@Z
; public: enum FMOD_RESULT __cdecl FMOD::DSP::showConfigDialog(void *__ptr64,bool)__ptr64 
?showConfigDialog@DSP@FMOD@@QEAA?AW4FMOD_RESULT@@PEAX_N@Z
; public: enum FMOD_RESULT __cdecl FMOD::ChannelControl::stop(void)__ptr64 
?stop@ChannelControl@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::SoundGroup::stop(void)__ptr64 
?stop@SoundGroup@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::System::unloadPlugin(unsigned int)__ptr64 
?unloadPlugin@System@FMOD@@QEAA?AW4FMOD_RESULT@@I@Z
; public: enum FMOD_RESULT __cdecl FMOD::Sound::unlock(void *__ptr64,void *__ptr64,unsigned int,unsigned int)__ptr64 
?unlock@Sound@FMOD@@QEAA?AW4FMOD_RESULT@@PEAX0II@Z
; public: enum FMOD_RESULT __cdecl FMOD::System::unlockDSP(void)__ptr64 
?unlockDSP@System@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: enum FMOD_RESULT __cdecl FMOD::System::update(void)__ptr64 
?update@System@FMOD@@QEAA?AW4FMOD_RESULT@@XZ
; public: static enum FMOD_RESULT __cdecl FMOD::ChannelI::validate(class FMOD::Channel *__ptr64,class FMOD::ChannelI *__ptr64 *__ptr64,class FMOD::SystemLockScope *__ptr64)
?validate@ChannelI@FMOD@@SA?AW4FMOD_RESULT@@PEAVChannel@2@PEAPEAV12@PEAVSystemLockScope@2@@Z
; public: static enum FMOD_RESULT __cdecl FMOD::DSPI::validate(class FMOD::DSP *__ptr64,class FMOD::DSPI *__ptr64 *__ptr64,class FMOD::SystemLockScope *__ptr64)
?validate@DSPI@FMOD@@SA?AW4FMOD_RESULT@@PEAVDSP@2@PEAPEAV12@PEAVSystemLockScope@2@@Z
; public: static enum FMOD_RESULT __cdecl FMOD::SystemI::validate(class FMOD::System *__ptr64,class FMOD::SystemI *__ptr64 *__ptr64,class FMOD::SystemLockScope *__ptr64)
?validate@SystemI@FMOD@@SA?AW4FMOD_RESULT@@PEAVSystem@2@PEAPEAV12@PEAVSystemLockScope@2@@Z
FMOD5_ChannelGroup_AddDSP
FMOD5_ChannelGroup_AddFadePoint
FMOD5_ChannelGroup_AddGroup
FMOD5_ChannelGroup_Get3DAttributes
FMOD5_ChannelGroup_Get3DConeOrientation
FMOD5_ChannelGroup_Get3DConeSettings
FMOD5_ChannelGroup_Get3DCustomRolloff
FMOD5_ChannelGroup_Get3DDistanceFilter
FMOD5_ChannelGroup_Get3DDopplerLevel
FMOD5_ChannelGroup_Get3DLevel
FMOD5_ChannelGroup_Get3DMinMaxDistance
FMOD5_ChannelGroup_Get3DOcclusion
FMOD5_ChannelGroup_Get3DSpread
FMOD5_ChannelGroup_GetAudibility
FMOD5_ChannelGroup_GetChannel
FMOD5_ChannelGroup_GetDSP
FMOD5_ChannelGroup_GetDSPClock
FMOD5_ChannelGroup_GetDSPIndex
FMOD5_ChannelGroup_GetDelay
FMOD5_ChannelGroup_GetFadePoints
FMOD5_ChannelGroup_GetGroup
FMOD5_ChannelGroup_GetLowPassGain
FMOD5_ChannelGroup_GetMixMatrix
FMOD5_ChannelGroup_GetMode
FMOD5_ChannelGroup_GetMute
FMOD5_ChannelGroup_GetName
FMOD5_ChannelGroup_GetNumChannels
FMOD5_ChannelGroup_GetNumDSPs
FMOD5_ChannelGroup_GetNumGroups
FMOD5_ChannelGroup_GetParentGroup
FMOD5_ChannelGroup_GetPaused
FMOD5_ChannelGroup_GetPitch
FMOD5_ChannelGroup_GetReverbProperties
FMOD5_ChannelGroup_GetSystemObject
FMOD5_ChannelGroup_GetUserData
FMOD5_ChannelGroup_GetVolume
FMOD5_ChannelGroup_GetVolumeRamp
FMOD5_ChannelGroup_IsPlaying
FMOD5_ChannelGroup_Release
FMOD5_ChannelGroup_RemoveDSP
FMOD5_ChannelGroup_RemoveFadePoints
FMOD5_ChannelGroup_Set3DAttributes
FMOD5_ChannelGroup_Set3DConeOrientation
FMOD5_ChannelGroup_Set3DConeSettings
FMOD5_ChannelGroup_Set3DCustomRolloff
FMOD5_ChannelGroup_Set3DDistanceFilter
FMOD5_ChannelGroup_Set3DDopplerLevel
FMOD5_ChannelGroup_Set3DLevel
FMOD5_ChannelGroup_Set3DMinMaxDistance
FMOD5_ChannelGroup_Set3DOcclusion
FMOD5_ChannelGroup_Set3DSpread
FMOD5_ChannelGroup_SetCallback
FMOD5_ChannelGroup_SetDSPIndex
FMOD5_ChannelGroup_SetDelay
FMOD5_ChannelGroup_SetFadePointRamp
FMOD5_ChannelGroup_SetLowPassGain
FMOD5_ChannelGroup_SetMixLevelsInput
FMOD5_ChannelGroup_SetMixLevelsOutput
FMOD5_ChannelGroup_SetMixMatrix
FMOD5_ChannelGroup_SetMode
FMOD5_ChannelGroup_SetMute
FMOD5_ChannelGroup_SetPan
FMOD5_ChannelGroup_SetPaused
FMOD5_ChannelGroup_SetPitch
FMOD5_ChannelGroup_SetReverbProperties
FMOD5_ChannelGroup_SetUserData
FMOD5_ChannelGroup_SetVolume
FMOD5_ChannelGroup_SetVolumeRamp
FMOD5_ChannelGroup_Stop
FMOD5_Channel_AddDSP
FMOD5_Channel_AddFadePoint
FMOD5_Channel_Get3DAttributes
FMOD5_Channel_Get3DConeOrientation
FMOD5_Channel_Get3DConeSettings
FMOD5_Channel_Get3DCustomRolloff
FMOD5_Channel_Get3DDistanceFilter
FMOD5_Channel_Get3DDopplerLevel
FMOD5_Channel_Get3DLevel
FMOD5_Channel_Get3DMinMaxDistance
FMOD5_Channel_Get3DOcclusion
FMOD5_Channel_Get3DSpread
FMOD5_Channel_GetAudibility
FMOD5_Channel_GetChannelGroup
FMOD5_Channel_GetCurrentSound
FMOD5_Channel_GetDSP
FMOD5_Channel_GetDSPClock
FMOD5_Channel_GetDSPIndex
FMOD5_Channel_GetDelay
FMOD5_Channel_GetFadePoints
FMOD5_Channel_GetFrequency
FMOD5_Channel_GetIndex
FMOD5_Channel_GetLoopCount
FMOD5_Channel_GetLoopPoints
FMOD5_Channel_GetLowPassGain
FMOD5_Channel_GetMixMatrix
FMOD5_Channel_GetMode
FMOD5_Channel_GetMute
FMOD5_Channel_GetNumDSPs
FMOD5_Channel_GetPaused
FMOD5_Channel_GetPitch
FMOD5_Channel_GetPosition
FMOD5_Channel_GetPriority
FMOD5_Channel_GetReverbProperties
FMOD5_Channel_GetSystemObject
FMOD5_Channel_GetUserData
FMOD5_Channel_GetVolume
FMOD5_Channel_GetVolumeRamp
FMOD5_Channel_IsPlaying
FMOD5_Channel_IsVirtual
FMOD5_Channel_RemoveDSP
FMOD5_Channel_RemoveFadePoints
FMOD5_Channel_Set3DAttributes
FMOD5_Channel_Set3DConeOrientation
FMOD5_Channel_Set3DConeSettings
FMOD5_Channel_Set3DCustomRolloff
FMOD5_Channel_Set3DDistanceFilter
FMOD5_Channel_Set3DDopplerLevel
FMOD5_Channel_Set3DLevel
FMOD5_Channel_Set3DMinMaxDistance
FMOD5_Channel_Set3DOcclusion
FMOD5_Channel_Set3DSpread
FMOD5_Channel_SetCallback
FMOD5_Channel_SetChannelGroup
FMOD5_Channel_SetDSPIndex
FMOD5_Channel_SetDelay
FMOD5_Channel_SetFadePointRamp
FMOD5_Channel_SetFrequency
FMOD5_Channel_SetLoopCount
FMOD5_Channel_SetLoopPoints
FMOD5_Channel_SetLowPassGain
FMOD5_Channel_SetMixLevelsInput
FMOD5_Channel_SetMixLevelsOutput
FMOD5_Channel_SetMixMatrix
FMOD5_Channel_SetMode
FMOD5_Channel_SetMute
FMOD5_Channel_SetPan
FMOD5_Channel_SetPaused
FMOD5_Channel_SetPitch
FMOD5_Channel_SetPosition
FMOD5_Channel_SetPriority
FMOD5_Channel_SetReverbProperties
FMOD5_Channel_SetUserData
FMOD5_Channel_SetVolume
FMOD5_Channel_SetVolumeRamp
FMOD5_Channel_Stop
FMOD5_DSPConnection_GetInput
FMOD5_DSPConnection_GetMix
FMOD5_DSPConnection_GetMixMatrix
FMOD5_DSPConnection_GetOutput
FMOD5_DSPConnection_GetType
FMOD5_DSPConnection_GetUserData
FMOD5_DSPConnection_SetMix
FMOD5_DSPConnection_SetMixMatrix
FMOD5_DSPConnection_SetUserData
FMOD5_DSP_AddInput
FMOD5_DSP_DisconnectAll
FMOD5_DSP_DisconnectFrom
FMOD5_DSP_GetActive
FMOD5_DSP_GetBypass
FMOD5_DSP_GetCPUUsage
FMOD5_DSP_GetChannelFormat
FMOD5_DSP_GetDataParameterIndex
FMOD5_DSP_GetIdle
FMOD5_DSP_GetInfo
FMOD5_DSP_GetInput
FMOD5_DSP_GetMeteringEnabled
FMOD5_DSP_GetMeteringInfo
FMOD5_DSP_GetNumInputs
FMOD5_DSP_GetNumOutputs
FMOD5_DSP_GetNumParameters
FMOD5_DSP_GetOutput
FMOD5_DSP_GetOutputChannelFormat
FMOD5_DSP_GetParameterBool
FMOD5_DSP_GetParameterData
FMOD5_DSP_GetParameterFloat
FMOD5_DSP_GetParameterInfo
FMOD5_DSP_GetParameterInt
FMOD5_DSP_GetSystemObject
FMOD5_DSP_GetType
FMOD5_DSP_GetUserData
FMOD5_DSP_GetWetDryMix
FMOD5_DSP_Release
FMOD5_DSP_Reset
FMOD5_DSP_SetActive
FMOD5_DSP_SetBypass
FMOD5_DSP_SetCallback
FMOD5_DSP_SetChannelFormat
FMOD5_DSP_SetMeteringEnabled
FMOD5_DSP_SetParameterBool
FMOD5_DSP_SetParameterData
FMOD5_DSP_SetParameterFloat
FMOD5_DSP_SetParameterInt
FMOD5_DSP_SetUserData
FMOD5_DSP_SetWetDryMix
FMOD5_DSP_ShowConfigDialog
FMOD5_Debug_Initialize
FMOD5_File_GetDiskBusy
FMOD5_File_SetDiskBusy
FMOD5_Geometry_AddPolygon
FMOD5_Geometry_GetActive
FMOD5_Geometry_GetMaxPolygons
FMOD5_Geometry_GetNumPolygons
FMOD5_Geometry_GetPolygonAttributes
FMOD5_Geometry_GetPolygonNumVertices
FMOD5_Geometry_GetPolygonVertex
FMOD5_Geometry_GetPosition
FMOD5_Geometry_GetRotation
FMOD5_Geometry_GetScale
FMOD5_Geometry_GetUserData
FMOD5_Geometry_Release
FMOD5_Geometry_Save
FMOD5_Geometry_SetActive
FMOD5_Geometry_SetPolygonAttributes
FMOD5_Geometry_SetPolygonVertex
FMOD5_Geometry_SetPosition
FMOD5_Geometry_SetRotation
FMOD5_Geometry_SetScale
FMOD5_Geometry_SetUserData
FMOD5_Memory_GetStats
FMOD5_Memory_Initialize
FMOD5_Reverb3D_Get3DAttributes
FMOD5_Reverb3D_GetActive
FMOD5_Reverb3D_GetProperties
FMOD5_Reverb3D_GetUserData
FMOD5_Reverb3D_Release
FMOD5_Reverb3D_Set3DAttributes
FMOD5_Reverb3D_SetActive
FMOD5_Reverb3D_SetProperties
FMOD5_Reverb3D_SetUserData
FMOD5_SoundGroup_GetMaxAudible
FMOD5_SoundGroup_GetMaxAudibleBehavior
FMOD5_SoundGroup_GetMuteFadeSpeed
FMOD5_SoundGroup_GetName
FMOD5_SoundGroup_GetNumPlaying
FMOD5_SoundGroup_GetNumSounds
FMOD5_SoundGroup_GetSound
FMOD5_SoundGroup_GetSystemObject
FMOD5_SoundGroup_GetUserData
FMOD5_SoundGroup_GetVolume
FMOD5_SoundGroup_Release
FMOD5_SoundGroup_SetMaxAudible
FMOD5_SoundGroup_SetMaxAudibleBehavior
FMOD5_SoundGroup_SetMuteFadeSpeed
FMOD5_SoundGroup_SetUserData
FMOD5_SoundGroup_SetVolume
FMOD5_SoundGroup_Stop
FMOD5_Sound_AddSyncPoint
FMOD5_Sound_DeleteSyncPoint
FMOD5_Sound_Get3DConeSettings
FMOD5_Sound_Get3DCustomRolloff
FMOD5_Sound_Get3DMinMaxDistance
FMOD5_Sound_GetDefaults
FMOD5_Sound_GetFormat
FMOD5_Sound_GetLength
FMOD5_Sound_GetLoopCount
FMOD5_Sound_GetLoopPoints
FMOD5_Sound_GetMode
FMOD5_Sound_GetMusicChannelVolume
FMOD5_Sound_GetMusicNumChannels
FMOD5_Sound_GetMusicSpeed
FMOD5_Sound_GetName
FMOD5_Sound_GetNumSubSounds
FMOD5_Sound_GetNumSyncPoints
FMOD5_Sound_GetNumTags
FMOD5_Sound_GetOpenState
FMOD5_Sound_GetSoundGroup
FMOD5_Sound_GetSubSound
FMOD5_Sound_GetSubSoundParent
FMOD5_Sound_GetSyncPoint
FMOD5_Sound_GetSyncPointInfo
FMOD5_Sound_GetSystemObject
FMOD5_Sound_GetTag
FMOD5_Sound_GetUserData
FMOD5_Sound_Lock
FMOD5_Sound_ReadData
FMOD5_Sound_Release
FMOD5_Sound_SeekData
FMOD5_Sound_Set3DConeSettings
FMOD5_Sound_Set3DCustomRolloff
FMOD5_Sound_Set3DMinMaxDistance
FMOD5_Sound_SetDefaults
FMOD5_Sound_SetLoopCount
FMOD5_Sound_SetLoopPoints
FMOD5_Sound_SetMode
FMOD5_Sound_SetMusicChannelVolume
FMOD5_Sound_SetMusicSpeed
FMOD5_Sound_SetSoundGroup
FMOD5_Sound_SetUserData
FMOD5_Sound_Unlock
FMOD5_System_AttachChannelGroupToPort
FMOD5_System_AttachFileSystem
FMOD5_System_Close
FMOD5_System_Create
FMOD5_System_CreateChannelGroup
FMOD5_System_CreateDSP
FMOD5_System_CreateDSPByPlugin
FMOD5_System_CreateDSPByType
FMOD5_System_CreateDSPConnection
FMOD5_System_CreateGeometry
FMOD5_System_CreateReverb3D
FMOD5_System_CreateSound
FMOD5_System_CreateSoundGroup
FMOD5_System_CreateStream
FMOD5_System_DetachChannelGroupFromPort
FMOD5_System_Get3DListenerAttributes
FMOD5_System_Get3DNumListeners
FMOD5_System_Get3DSettings
FMOD5_System_GetAdvancedSettings
FMOD5_System_GetCPUUsage
FMOD5_System_GetChannel
FMOD5_System_GetChannelsPlaying
FMOD5_System_GetDSPBufferSize
FMOD5_System_GetDSPInfoByPlugin
FMOD5_System_GetDSPInfoByType
FMOD5_System_GetDefaultMixMatrix
FMOD5_System_GetDriver
FMOD5_System_GetDriverInfo
FMOD5_System_GetFileUsage
FMOD5_System_GetGeometryOcclusion
FMOD5_System_GetGeometrySettings
FMOD5_System_GetMasterChannelGroup
FMOD5_System_GetMasterSoundGroup
FMOD5_System_GetNestedPlugin
FMOD5_System_GetNetworkProxy
FMOD5_System_GetNetworkTimeout
FMOD5_System_GetNumDrivers
FMOD5_System_GetNumNestedPlugins
FMOD5_System_GetNumPlugins
FMOD5_System_GetOutput
FMOD5_System_GetOutputByPlugin
FMOD5_System_GetOutputHandle
FMOD5_System_GetPluginHandle
FMOD5_System_GetPluginInfo
FMOD5_System_GetRecordDriverInfo
FMOD5_System_GetRecordNumDrivers
FMOD5_System_GetRecordPosition
FMOD5_System_GetReverbProperties
FMOD5_System_GetSoftwareChannels
FMOD5_System_GetSoftwareFormat
FMOD5_System_GetSpeakerModeChannels
FMOD5_System_GetSpeakerPosition
FMOD5_System_GetStreamBufferSize
FMOD5_System_GetUserData
FMOD5_System_GetVersion
FMOD5_System_Init
FMOD5_System_IsRecording
FMOD5_System_LoadGeometry
FMOD5_System_LoadPlugin
FMOD5_System_LockDSP
FMOD5_System_MixerResume
FMOD5_System_MixerSuspend
FMOD5_System_PlayDSP
FMOD5_System_PlaySound
FMOD5_System_RecordStart
FMOD5_System_RecordStop
FMOD5_System_RegisterCodec
FMOD5_System_RegisterDSP
FMOD5_System_RegisterOutput
FMOD5_System_Release
FMOD5_System_Set3DListenerAttributes
FMOD5_System_Set3DNumListeners
FMOD5_System_Set3DRolloffCallback
FMOD5_System_Set3DSettings
FMOD5_System_SetAdvancedSettings
FMOD5_System_SetCallback
FMOD5_System_SetDSPBufferSize
FMOD5_System_SetDriver
FMOD5_System_SetFileSystem
FMOD5_System_SetGeometrySettings
FMOD5_System_SetNetworkProxy
FMOD5_System_SetNetworkTimeout
FMOD5_System_SetOutput
FMOD5_System_SetOutputByPlugin
FMOD5_System_SetPluginPath
FMOD5_System_SetReverbProperties
FMOD5_System_SetSoftwareChannels
FMOD5_System_SetSoftwareFormat
FMOD5_System_SetSpeakerPosition
FMOD5_System_SetStreamBufferSize
FMOD5_System_SetUserData
FMOD5_System_UnloadPlugin
FMOD5_System_UnlockDSP
FMOD5_System_Update
FMOD5_Thread_SetAttributes
FMOD_ChannelGroup_AddDSP
FMOD_ChannelGroup_AddFadePoint
FMOD_ChannelGroup_AddGroup
FMOD_ChannelGroup_Get3DAttributes
FMOD_ChannelGroup_Get3DConeOrientation
FMOD_ChannelGroup_Get3DConeSettings
FMOD_ChannelGroup_Get3DCustomRolloff
FMOD_ChannelGroup_Get3DDistanceFilter
FMOD_ChannelGroup_Get3DDopplerLevel
FMOD_ChannelGroup_Get3DLevel
FMOD_ChannelGroup_Get3DMinMaxDistance
FMOD_ChannelGroup_Get3DOcclusion
FMOD_ChannelGroup_Get3DSpread
FMOD_ChannelGroup_GetAudibility
FMOD_ChannelGroup_GetChannel
FMOD_ChannelGroup_GetDSP
FMOD_ChannelGroup_GetDSPClock
FMOD_ChannelGroup_GetDSPIndex
FMOD_ChannelGroup_GetDelay
FMOD_ChannelGroup_GetFadePoints
FMOD_ChannelGroup_GetGroup
FMOD_ChannelGroup_GetLowPassGain
FMOD_ChannelGroup_GetMixMatrix
FMOD_ChannelGroup_GetMode
FMOD_ChannelGroup_GetMute
FMOD_ChannelGroup_GetName
FMOD_ChannelGroup_GetNumChannels
FMOD_ChannelGroup_GetNumDSPs
FMOD_ChannelGroup_GetNumGroups
FMOD_ChannelGroup_GetParentGroup
FMOD_ChannelGroup_GetPaused
FMOD_ChannelGroup_GetPitch
FMOD_ChannelGroup_GetReverbProperties
FMOD_ChannelGroup_GetSystemObject
FMOD_ChannelGroup_GetUserData
FMOD_ChannelGroup_GetVolume
FMOD_ChannelGroup_GetVolumeRamp
FMOD_ChannelGroup_IsPlaying
FMOD_ChannelGroup_Release
FMOD_ChannelGroup_RemoveDSP
FMOD_ChannelGroup_RemoveFadePoints
FMOD_ChannelGroup_Set3DAttributes
FMOD_ChannelGroup_Set3DConeOrientation
FMOD_ChannelGroup_Set3DConeSettings
FMOD_ChannelGroup_Set3DCustomRolloff
FMOD_ChannelGroup_Set3DDistanceFilter
FMOD_ChannelGroup_Set3DDopplerLevel
FMOD_ChannelGroup_Set3DLevel
FMOD_ChannelGroup_Set3DMinMaxDistance
FMOD_ChannelGroup_Set3DOcclusion
FMOD_ChannelGroup_Set3DSpread
FMOD_ChannelGroup_SetCallback
FMOD_ChannelGroup_SetDSPIndex
FMOD_ChannelGroup_SetDelay
FMOD_ChannelGroup_SetFadePointRamp
FMOD_ChannelGroup_SetLowPassGain
FMOD_ChannelGroup_SetMixLevelsInput
FMOD_ChannelGroup_SetMixLevelsOutput
FMOD_ChannelGroup_SetMixMatrix
FMOD_ChannelGroup_SetMode
FMOD_ChannelGroup_SetMute
FMOD_ChannelGroup_SetPan
FMOD_ChannelGroup_SetPaused
FMOD_ChannelGroup_SetPitch
FMOD_ChannelGroup_SetReverbProperties
FMOD_ChannelGroup_SetUserData
FMOD_ChannelGroup_SetVolume
FMOD_ChannelGroup_SetVolumeRamp
FMOD_ChannelGroup_Stop
FMOD_Channel_AddDSP
FMOD_Channel_AddFadePoint
FMOD_Channel_Get3DAttributes
FMOD_Channel_Get3DConeOrientation
FMOD_Channel_Get3DConeSettings
FMOD_Channel_Get3DCustomRolloff
FMOD_Channel_Get3DDistanceFilter
FMOD_Channel_Get3DDopplerLevel
FMOD_Channel_Get3DLevel
FMOD_Channel_Get3DMinMaxDistance
FMOD_Channel_Get3DOcclusion
FMOD_Channel_Get3DSpread
FMOD_Channel_GetAudibility
FMOD_Channel_GetChannelGroup
FMOD_Channel_GetCurrentSound
FMOD_Channel_GetDSP
FMOD_Channel_GetDSPClock
FMOD_Channel_GetDSPIndex
FMOD_Channel_GetDelay
FMOD_Channel_GetFadePoints
FMOD_Channel_GetFrequency
FMOD_Channel_GetIndex
FMOD_Channel_GetLoopCount
FMOD_Channel_GetLoopPoints
FMOD_Channel_GetLowPassGain
FMOD_Channel_GetMixMatrix
FMOD_Channel_GetMode
FMOD_Channel_GetMute
FMOD_Channel_GetNumDSPs
FMOD_Channel_GetPaused
FMOD_Channel_GetPitch
FMOD_Channel_GetPosition
FMOD_Channel_GetPriority
FMOD_Channel_GetReverbProperties
FMOD_Channel_GetSystemObject
FMOD_Channel_GetUserData
FMOD_Channel_GetVolume
FMOD_Channel_GetVolumeRamp
FMOD_Channel_IsPlaying
FMOD_Channel_IsVirtual
FMOD_Channel_RemoveDSP
FMOD_Channel_RemoveFadePoints
FMOD_Channel_Set3DAttributes
FMOD_Channel_Set3DConeOrientation
FMOD_Channel_Set3DConeSettings
FMOD_Channel_Set3DCustomRolloff
FMOD_Channel_Set3DDistanceFilter
FMOD_Channel_Set3DDopplerLevel
FMOD_Channel_Set3DLevel
FMOD_Channel_Set3DMinMaxDistance
FMOD_Channel_Set3DOcclusion
FMOD_Channel_Set3DSpread
FMOD_Channel_SetCallback
FMOD_Channel_SetChannelGroup
FMOD_Channel_SetDSPIndex
FMOD_Channel_SetDelay
FMOD_Channel_SetFadePointRamp
FMOD_Channel_SetFrequency
FMOD_Channel_SetLoopCount
FMOD_Channel_SetLoopPoints
FMOD_Channel_SetLowPassGain
FMOD_Channel_SetMixLevelsInput
FMOD_Channel_SetMixLevelsOutput
FMOD_Channel_SetMixMatrix
FMOD_Channel_SetMode
FMOD_Channel_SetMute
FMOD_Channel_SetPan
FMOD_Channel_SetPaused
FMOD_Channel_SetPitch
FMOD_Channel_SetPosition
FMOD_Channel_SetPriority
FMOD_Channel_SetReverbProperties
FMOD_Channel_SetUserData
FMOD_Channel_SetVolume
FMOD_Channel_SetVolumeRamp
FMOD_Channel_Stop
FMOD_DSPConnection_GetInput
FMOD_DSPConnection_GetMix
FMOD_DSPConnection_GetMixMatrix
FMOD_DSPConnection_GetOutput
FMOD_DSPConnection_GetType
FMOD_DSPConnection_GetUserData
FMOD_DSPConnection_SetMix
FMOD_DSPConnection_SetMixMatrix
FMOD_DSPConnection_SetUserData
FMOD_DSP_AddInput
FMOD_DSP_DisconnectAll
FMOD_DSP_DisconnectFrom
FMOD_DSP_GetActive
FMOD_DSP_GetBypass
FMOD_DSP_GetCPUUsage
FMOD_DSP_GetChannelFormat
FMOD_DSP_GetDataParameterIndex
FMOD_DSP_GetIdle
FMOD_DSP_GetInfo
FMOD_DSP_GetInput
FMOD_DSP_GetMeteringEnabled
FMOD_DSP_GetMeteringInfo
FMOD_DSP_GetNumInputs
FMOD_DSP_GetNumOutputs
FMOD_DSP_GetNumParameters
FMOD_DSP_GetOutput
FMOD_DSP_GetOutputChannelFormat
FMOD_DSP_GetParameterBool
FMOD_DSP_GetParameterData
FMOD_DSP_GetParameterFloat
FMOD_DSP_GetParameterInfo
FMOD_DSP_GetParameterInt
FMOD_DSP_GetSystemObject
FMOD_DSP_GetType
FMOD_DSP_GetUserData
FMOD_DSP_GetWetDryMix
FMOD_DSP_Release
FMOD_DSP_Reset
FMOD_DSP_SetActive
FMOD_DSP_SetBypass
FMOD_DSP_SetCallback
FMOD_DSP_SetChannelFormat
FMOD_DSP_SetMeteringEnabled
FMOD_DSP_SetParameterBool
FMOD_DSP_SetParameterData
FMOD_DSP_SetParameterFloat
FMOD_DSP_SetParameterInt
FMOD_DSP_SetUserData
FMOD_DSP_SetWetDryMix
FMOD_DSP_ShowConfigDialog
FMOD_Debug_Initialize
FMOD_File_GetDiskBusy
FMOD_File_SetDiskBusy
FMOD_Geometry_AddPolygon
FMOD_Geometry_GetActive
FMOD_Geometry_GetMaxPolygons
FMOD_Geometry_GetNumPolygons
FMOD_Geometry_GetPolygonAttributes
FMOD_Geometry_GetPolygonNumVertices
FMOD_Geometry_GetPolygonVertex
FMOD_Geometry_GetPosition
FMOD_Geometry_GetRotation
FMOD_Geometry_GetScale
FMOD_Geometry_GetUserData
FMOD_Geometry_Release
FMOD_Geometry_Save
FMOD_Geometry_SetActive
FMOD_Geometry_SetPolygonAttributes
FMOD_Geometry_SetPolygonVertex
FMOD_Geometry_SetPosition
FMOD_Geometry_SetRotation
FMOD_Geometry_SetScale
FMOD_Geometry_SetUserData
FMOD_Memory_GetStats
FMOD_Memory_Initialize
FMOD_OS_CriticalSection_Create
FMOD_OS_CriticalSection_Enter
FMOD_OS_CriticalSection_Free
FMOD_OS_CriticalSection_IsLocked
FMOD_OS_CriticalSection_Leave
FMOD_OS_CriticalSection_TryEnter
FMOD_OS_Debug_Output
FMOD_OS_File_Close
FMOD_OS_File_Open
FMOD_OS_File_Read
FMOD_OS_File_Seek
FMOD_OS_File_Write
FMOD_OS_Thread_Create
FMOD_OS_Thread_Destroy
FMOD_OS_Time_GetUs
FMOD_OS_Time_Sleep
FMOD_Reverb3D_Get3DAttributes
FMOD_Reverb3D_GetActive
FMOD_Reverb3D_GetProperties
FMOD_Reverb3D_GetUserData
FMOD_Reverb3D_Release
FMOD_Reverb3D_Set3DAttributes
FMOD_Reverb3D_SetActive
FMOD_Reverb3D_SetProperties
FMOD_Reverb3D_SetUserData
FMOD_SoundGroup_GetMaxAudible
FMOD_SoundGroup_GetMaxAudibleBehavior
FMOD_SoundGroup_GetMuteFadeSpeed
FMOD_SoundGroup_GetName
FMOD_SoundGroup_GetNumPlaying
FMOD_SoundGroup_GetNumSounds
FMOD_SoundGroup_GetSound
FMOD_SoundGroup_GetSystemObject
FMOD_SoundGroup_GetUserData
FMOD_SoundGroup_GetVolume
FMOD_SoundGroup_Release
FMOD_SoundGroup_SetMaxAudible
FMOD_SoundGroup_SetMaxAudibleBehavior
FMOD_SoundGroup_SetMuteFadeSpeed
FMOD_SoundGroup_SetUserData
FMOD_SoundGroup_SetVolume
FMOD_SoundGroup_Stop
FMOD_Sound_AddSyncPoint
FMOD_Sound_DeleteSyncPoint
FMOD_Sound_Get3DConeSettings
FMOD_Sound_Get3DCustomRolloff
FMOD_Sound_Get3DMinMaxDistance
FMOD_Sound_GetDefaults
FMOD_Sound_GetFormat
FMOD_Sound_GetLength
FMOD_Sound_GetLoopCount
FMOD_Sound_GetLoopPoints
FMOD_Sound_GetMode
FMOD_Sound_GetMusicChannelVolume
FMOD_Sound_GetMusicNumChannels
FMOD_Sound_GetMusicSpeed
FMOD_Sound_GetName
FMOD_Sound_GetNumSubSounds
FMOD_Sound_GetNumSyncPoints
FMOD_Sound_GetNumTags
FMOD_Sound_GetOpenState
FMOD_Sound_GetSoundGroup
FMOD_Sound_GetSubSound
FMOD_Sound_GetSubSoundParent
FMOD_Sound_GetSyncPoint
FMOD_Sound_GetSyncPointInfo
FMOD_Sound_GetSystemObject
FMOD_Sound_GetTag
FMOD_Sound_GetUserData
FMOD_Sound_Lock
FMOD_Sound_ReadData
FMOD_Sound_Release
FMOD_Sound_SeekData
FMOD_Sound_Set3DConeSettings
FMOD_Sound_Set3DCustomRolloff
FMOD_Sound_Set3DMinMaxDistance
FMOD_Sound_SetDefaults
FMOD_Sound_SetLoopCount
FMOD_Sound_SetLoopPoints
FMOD_Sound_SetMode
FMOD_Sound_SetMusicChannelVolume
FMOD_Sound_SetMusicSpeed
FMOD_Sound_SetSoundGroup
FMOD_Sound_SetUserData
FMOD_Sound_Unlock
FMOD_System_AttachChannelGroupToPort
FMOD_System_AttachFileSystem
FMOD_System_Close
FMOD_System_Create
FMOD_System_CreateChannelGroup
FMOD_System_CreateDSP
FMOD_System_CreateDSPByPlugin
FMOD_System_CreateDSPByType
FMOD_System_CreateDSPConnection
FMOD_System_CreateGeometry
FMOD_System_CreateReverb3D
FMOD_System_CreateSound
FMOD_System_CreateSoundGroup
FMOD_System_CreateStream
FMOD_System_DetachChannelGroupFromPort
FMOD_System_Get3DListenerAttributes
FMOD_System_Get3DNumListeners
FMOD_System_Get3DSettings
FMOD_System_GetAdvancedSettings
FMOD_System_GetCPUUsage
FMOD_System_GetChannel
FMOD_System_GetChannelsPlaying
FMOD_System_GetDSPBufferSize
FMOD_System_GetDSPInfoByPlugin
FMOD_System_GetDSPInfoByType
FMOD_System_GetDefaultMixMatrix
FMOD_System_GetDriver
FMOD_System_GetDriverInfo
FMOD_System_GetFileUsage
FMOD_System_GetGeometryOcclusion
FMOD_System_GetGeometrySettings
FMOD_System_GetMasterChannelGroup
FMOD_System_GetMasterSoundGroup
FMOD_System_GetNestedPlugin
FMOD_System_GetNetworkProxy
FMOD_System_GetNetworkTimeout
FMOD_System_GetNumDrivers
FMOD_System_GetNumNestedPlugins
FMOD_System_GetNumPlugins
FMOD_System_GetOutput
FMOD_System_GetOutputByPlugin
FMOD_System_GetOutputHandle
FMOD_System_GetPluginHandle
FMOD_System_GetPluginInfo
FMOD_System_GetRecordDriverInfo
FMOD_System_GetRecordNumDrivers
FMOD_System_GetRecordPosition
FMOD_System_GetReverbProperties
FMOD_System_GetSoftwareChannels
FMOD_System_GetSoftwareFormat
FMOD_System_GetSpeakerModeChannels
FMOD_System_GetSpeakerPosition
FMOD_System_GetStreamBufferSize
FMOD_System_GetUserData
FMOD_System_GetVersion
FMOD_System_Init
FMOD_System_IsRecording
FMOD_System_LoadGeometry
FMOD_System_LoadPlugin
FMOD_System_LockDSP
FMOD_System_MixerResume
FMOD_System_MixerSuspend
FMOD_System_PlayDSP
FMOD_System_PlaySound
FMOD_System_RecordStart
FMOD_System_RecordStop
FMOD_System_RegisterCodec
FMOD_System_RegisterDSP
FMOD_System_RegisterOutput
FMOD_System_Release
FMOD_System_Set3DListenerAttributes
FMOD_System_Set3DNumListeners
FMOD_System_Set3DRolloffCallback
FMOD_System_Set3DSettings
FMOD_System_SetAdvancedSettings
FMOD_System_SetCallback
FMOD_System_SetDSPBufferSize
FMOD_System_SetDriver
FMOD_System_SetFileSystem
FMOD_System_SetGeometrySettings
FMOD_System_SetNetworkProxy
FMOD_System_SetNetworkTimeout
FMOD_System_SetOutput
FMOD_System_SetOutputByPlugin
FMOD_System_SetPluginPath
FMOD_System_SetReverbProperties
FMOD_System_SetSoftwareChannels
FMOD_System_SetSoftwareFormat
FMOD_System_SetSpeakerPosition
FMOD_System_SetStreamBufferSize
FMOD_System_SetUserData
FMOD_System_UnloadPlugin
FMOD_System_UnlockDSP
FMOD_System_Update
FMOD_Thread_SetAttributes
