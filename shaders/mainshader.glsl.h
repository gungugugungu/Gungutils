#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc --input ./shaders/mainshader.glsl --output ./shaders/mainshader.glsl.h --slang glsl430

    Overview:
    =========
    Shader program: 'main':
        Get shader desc: main_shader_desc(sg_query_backend());
        Vertex Shader: vs
        Fragment Shader: fs
        Attributes:
            ATTR_main_aPos => 0
            ATTR_main_aNormal => 1
            ATTR_main_aTexCoord => 2
    Bindings:
        Uniform block 'vs_params':
            C struct: vs_params_t
            Bind slot: UB_vs_params => 0
        Uniform block 'fs_params':
            C struct: fs_params_t
            Bind slot: UB_fs_params => 1
        Uniform block 'material_params':
            C struct: material_params_t
            Bind slot: UB_material_params => 2
        Image '_palette2D':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG__palette2D => 0
        Sampler 'palette_smp':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_palette_smp => 0
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before mainshader.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_main_aPos (0)
#define ATTR_main_aNormal (1)
#define ATTR_main_aTexCoord (2)
#define UB_vs_params (0)
#define UB_fs_params (1)
#define UB_material_params (2)
#define IMG__palette2D (0)
#define SMP_palette_smp (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    HMM_Mat4 model;
    HMM_Mat4 view;
    HMM_Mat4 projection;
    float opacity;
    uint8_t _pad_196[12];
} vs_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_params_t {
    float view_pos[3];
    int num_lights;
    float light_positions[32][4];
    float light_directions[32][4];
    float light_colors[32][4];
    float light_data1[32][4];
    float light_data2[32][4];
    int light_types[32][4];
} fs_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct material_params_t {
    float ambient[3];
    uint8_t _pad_12[4];
    float diffuse[3];
    uint8_t _pad_28[4];
    float specular[3];
    float shininess;
} material_params_t;
#pragma pack(pop)
/*
    #version 430

    uniform vec4 vs_params[13];
    layout(location = 1) out vec3 FragPos;
    layout(location = 0) in vec3 aPos;
    layout(location = 2) out vec3 Normal;
    layout(location = 1) in vec3 aNormal;
    layout(location = 0) out vec2 TexCoord;
    layout(location = 2) in vec2 aTexCoord;
    layout(location = 1) out float v_opacity;

    void main()
    {
        mat4 _19 = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]);
        FragPos = vec3((_19 * vec4(aPos, 1.0)).xyz);
        mat4 _37 = transpose(inverse(_19));
        Normal = mat3(_37[0].xyz, _37[1].xyz, _37[2].xyz) * aNormal;
        gl_Position = (mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7])) * vec4(FragPos, 1.0);
        TexCoord = aTexCoord;
        v_opacity = vs_params[12].x;
    }

*/
static const uint8_t vs_source_glsl430[791] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x33,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,
    0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x50,
    0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x33,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x54,0x65,
    0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x32,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x76,
    0x5f,0x6f,0x70,0x61,0x63,0x69,0x74,0x79,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,
    0x34,0x20,0x5f,0x31,0x39,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,
    0x73,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x28,0x5f,0x31,0x39,0x20,0x2a,0x20,
    0x76,0x65,0x63,0x34,0x28,0x61,0x50,0x6f,0x73,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,
    0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,
    0x5f,0x33,0x37,0x20,0x3d,0x20,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x28,
    0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x28,0x5f,0x31,0x39,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6d,0x61,0x74,0x33,
    0x28,0x5f,0x33,0x37,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x33,0x37,
    0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x33,0x37,0x5b,0x32,0x5d,0x2e,
    0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x28,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x38,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x39,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,
    0x29,0x20,0x2a,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,
    0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x54,0x65,0x78,0x43,
    0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x6f,0x70,0x61,0x63,0x69,0x74,0x79,0x20,
    0x3d,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x2e,
    0x78,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 430

    struct fs_params
    {
        vec3 view_pos;
        int num_lights;
        vec4 light_positions[32];
        vec4 light_directions[32];
        vec4 light_colors[32];
        vec4 light_data1[32];
        vec4 light_data2[32];
        ivec4 light_types[32];
    };

    uniform fs_params _43;

    uniform vec4 material_params[3];
    layout(binding = 16) uniform sampler2D _palette2D_palette_smp;

    layout(location = 0) in vec2 TexCoord;
    layout(location = 2) in vec3 Normal;
    layout(location = 1) in vec3 FragPos;
    layout(location = 0) out vec4 FragColor;
    layout(location = 1) in float v_opacity;

    vec3 calculateDirectionalLight(int i, vec3 normal, vec3 viewDir)
    {
        vec3 _51 = normalize(-_43.light_directions[i].xyz);
        return (((material_params[0].xyz * _43.light_colors[i].xyz) + ((material_params[1].xyz * max(dot(normal, _51), 0.0)) * _43.light_colors[i].xyz)) + ((material_params[2].xyz * pow(max(dot(normal, normalize(_51 + viewDir)), 0.0), material_params[2].w)) * _43.light_colors[i].xyz)) * _43.light_data1[i].x;
    }

    vec3 calculatePointLight(int i, vec3 normal, vec3 fragPos, vec3 viewDir)
    {
        vec3 _129 = normalize(_43.light_positions[i].xyz - fragPos);
        float _155 = length(_43.light_positions[i].xyz - fragPos);
        float _168 = 1.0 / ((1.0 + (0.0900000035762786865234375 * _155)) + (0.0320000015199184417724609375 * (_155 * _155)));
        return ((((material_params[0].xyz * _43.light_colors[i].xyz) * _168) + (((material_params[1].xyz * max(dot(normal, _129), 0.0)) * _43.light_colors[i].xyz) * _168)) + (((material_params[2].xyz * pow(max(dot(normal, normalize(_129 + viewDir)), 0.0), material_params[2].w)) * _43.light_colors[i].xyz) * _168)) * _43.light_data1[i].x;
    }

    vec3 calculateSpotLight(int i, vec3 normal, vec3 fragPos, vec3 viewDir)
    {
        vec3 _224 = normalize(_43.light_positions[i].xyz - fragPos);
        float _250 = length(_43.light_positions[i].xyz - fragPos);
        float _319 = (1.0 / ((1.0 + (0.0900000035762786865234375 * _250)) + (0.0320000015199184417724609375 * (_250 * _250)))) * clamp((dot(_224, normalize(-_43.light_directions[i].xyz)) - _43.light_data1[i].w) / (_43.light_data1[i].z - _43.light_data1[i].w), 0.0, 1.0);
        return ((((material_params[0].xyz * _43.light_colors[i].xyz) * _319) + (((material_params[1].xyz * max(dot(normal, _224), 0.0)) * _43.light_colors[i].xyz) * _319)) + (((material_params[2].xyz * pow(max(dot(normal, normalize(_224 + viewDir)), 0.0), material_params[2].w)) * _43.light_colors[i].xyz) * _319)) * _43.light_data1[i].x;
    }

    void main()
    {
        vec3 _364 = normalize(Normal);
        vec3 _371 = normalize(_43.view_pos - FragPos);
        vec3 result = vec3(0.0);
        for (int i = 0; (i < _43.num_lights) && (i < 32); i++)
        {
            if (_43.light_types[i].x == 0)
            {
                int param = i;
                vec3 param_1 = _364;
                vec3 param_2 = _371;
                result += calculateDirectionalLight(param, param_1, param_2);
            }
            else
            {
                if (_43.light_types[i].x == 1)
                {
                    int param_3 = i;
                    vec3 param_4 = _364;
                    vec3 param_5 = FragPos;
                    vec3 param_6 = _371;
                    result += calculatePointLight(param_3, param_4, param_5, param_6);
                }
                else
                {
                    if (_43.light_types[i].x == 2)
                    {
                        int param_7 = i;
                        vec3 param_8 = _364;
                        vec3 param_9 = FragPos;
                        vec3 param_10 = _371;
                        result += calculateSpotLight(param_7, param_8, param_9, param_10);
                    }
                }
            }
        }
        FragColor = vec4(result * texture(_palette2D_palette_smp, TexCoord).xyz, v_opacity);
    }

*/
static const uint8_t fs_source_glsl430[3695] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,0x5f,0x70,
    0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6e,0x75,0x6d,0x5f,
    0x6c,0x69,0x67,0x68,0x74,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x73,
    0x5b,0x33,0x32,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x73,0x5b,
    0x33,0x32,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x73,0x5b,0x33,0x32,0x5d,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,
    0x61,0x74,0x61,0x31,0x5b,0x33,0x32,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x34,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x61,0x74,0x61,0x32,0x5b,0x33,
    0x32,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x34,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x74,0x79,0x70,0x65,0x73,0x5b,0x33,0x32,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x20,0x5f,0x34,0x33,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x31,0x36,0x29,
    0x20,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x32,0x44,0x20,0x5f,0x70,0x61,0x6c,0x65,0x74,0x74,0x65,0x32,0x44,0x5f,0x70,0x61,
    0x6c,0x65,0x74,0x74,0x65,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,
    0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x33,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x46,0x72,0x61,0x67,
    0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x76,0x5f,0x6f,0x70,0x61,0x63,0x69,0x74,0x79,0x3b,0x0a,
    0x0a,0x76,0x65,0x63,0x33,0x20,0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x65,0x44,
    0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x61,0x6c,0x4c,0x69,0x67,0x68,0x74,0x28,
    0x69,0x6e,0x74,0x20,0x69,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x31,
    0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x5f,0x34,
    0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,
    0x6e,0x73,0x5b,0x69,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,
    0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,
    0x20,0x2a,0x20,0x5f,0x34,0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x73,0x5b,0x69,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2b,0x20,0x28,0x28,
    0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,
    0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x5f,0x35,0x31,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x5f,0x34,0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x73,0x5b,0x69,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x29,
    0x20,0x2b,0x20,0x28,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x70,0x6f,
    0x77,0x28,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x35,0x31,0x20,
    0x2b,0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,
    0x29,0x2c,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x77,0x29,0x29,0x20,0x2a,0x20,0x5f,0x34,0x33,0x2e,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x73,0x5b,0x69,0x5d,0x2e,
    0x78,0x79,0x7a,0x29,0x29,0x20,0x2a,0x20,0x5f,0x34,0x33,0x2e,0x6c,0x69,0x67,0x68,
    0x74,0x5f,0x64,0x61,0x74,0x61,0x31,0x5b,0x69,0x5d,0x2e,0x78,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x76,0x65,0x63,0x33,0x20,0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x65,0x50,
    0x6f,0x69,0x6e,0x74,0x4c,0x69,0x67,0x68,0x74,0x28,0x69,0x6e,0x74,0x20,0x69,0x2c,
    0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x2c,0x20,0x76,0x65,0x63,0x33,
    0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x32,0x39,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x34,0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x73,0x5b,0x69,0x5d,0x2e,0x78,0x79,0x7a,
    0x20,0x2d,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x35,0x35,0x20,0x3d,0x20,0x6c,0x65,
    0x6e,0x67,0x74,0x68,0x28,0x5f,0x34,0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x73,0x5b,0x69,0x5d,0x2e,0x78,0x79,0x7a,0x20,
    0x2d,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x36,0x38,0x20,0x3d,0x20,0x31,0x2e,0x30,
    0x20,0x2f,0x20,0x28,0x28,0x31,0x2e,0x30,0x20,0x2b,0x20,0x28,0x30,0x2e,0x30,0x39,
    0x30,0x30,0x30,0x30,0x30,0x30,0x33,0x35,0x37,0x36,0x32,0x37,0x38,0x36,0x38,0x36,
    0x35,0x32,0x33,0x34,0x33,0x37,0x35,0x20,0x2a,0x20,0x5f,0x31,0x35,0x35,0x29,0x29,
    0x20,0x2b,0x20,0x28,0x30,0x2e,0x30,0x33,0x32,0x30,0x30,0x30,0x30,0x30,0x31,0x35,
    0x31,0x39,0x39,0x31,0x38,0x34,0x34,0x31,0x37,0x37,0x32,0x34,0x36,0x30,0x39,0x33,
    0x37,0x35,0x20,0x2a,0x20,0x28,0x5f,0x31,0x35,0x35,0x20,0x2a,0x20,0x5f,0x31,0x35,
    0x35,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x28,0x28,0x28,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x5f,0x34,
    0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x73,0x5b,0x69,
    0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,0x31,0x36,0x38,0x29,0x20,0x2b,
    0x20,0x28,0x28,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x6d,0x61,0x78,
    0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x5f,0x31,0x32,
    0x39,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x5f,0x34,0x33,0x2e,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x73,0x5b,0x69,0x5d,0x2e,
    0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,0x31,0x36,0x38,0x29,0x29,0x20,0x2b,0x20,
    0x28,0x28,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,
    0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x31,0x32,0x39,0x20,0x2b,
    0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,
    0x2c,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x32,0x5d,0x2e,0x77,0x29,0x29,0x20,0x2a,0x20,0x5f,0x34,0x33,0x2e,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x73,0x5b,0x69,0x5d,0x2e,0x78,
    0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,0x31,0x36,0x38,0x29,0x29,0x20,0x2a,0x20,0x5f,
    0x34,0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x61,0x74,0x61,0x31,0x5b,0x69,
    0x5d,0x2e,0x78,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x63,0x61,0x6c,
    0x63,0x75,0x6c,0x61,0x74,0x65,0x53,0x70,0x6f,0x74,0x4c,0x69,0x67,0x68,0x74,0x28,
    0x69,0x6e,0x74,0x20,0x69,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,
    0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x32,0x34,0x20,
    0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x34,0x33,0x2e,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x73,0x5b,
    0x69,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x35,
    0x30,0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x34,0x33,0x2e,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x73,0x5b,0x69,
    0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x31,0x39,
    0x20,0x3d,0x20,0x28,0x31,0x2e,0x30,0x20,0x2f,0x20,0x28,0x28,0x31,0x2e,0x30,0x20,
    0x2b,0x20,0x28,0x30,0x2e,0x30,0x39,0x30,0x30,0x30,0x30,0x30,0x30,0x33,0x35,0x37,
    0x36,0x32,0x37,0x38,0x36,0x38,0x36,0x35,0x32,0x33,0x34,0x33,0x37,0x35,0x20,0x2a,
    0x20,0x5f,0x32,0x35,0x30,0x29,0x29,0x20,0x2b,0x20,0x28,0x30,0x2e,0x30,0x33,0x32,
    0x30,0x30,0x30,0x30,0x30,0x31,0x35,0x31,0x39,0x39,0x31,0x38,0x34,0x34,0x31,0x37,
    0x37,0x32,0x34,0x36,0x30,0x39,0x33,0x37,0x35,0x20,0x2a,0x20,0x28,0x5f,0x32,0x35,
    0x30,0x20,0x2a,0x20,0x5f,0x32,0x35,0x30,0x29,0x29,0x29,0x29,0x20,0x2a,0x20,0x63,
    0x6c,0x61,0x6d,0x70,0x28,0x28,0x64,0x6f,0x74,0x28,0x5f,0x32,0x32,0x34,0x2c,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x5f,0x34,0x33,0x2e,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x73,0x5b,
    0x69,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x29,0x20,0x2d,0x20,0x5f,0x34,0x33,0x2e,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x64,0x61,0x74,0x61,0x31,0x5b,0x69,0x5d,0x2e,0x77,0x29,
    0x20,0x2f,0x20,0x28,0x5f,0x34,0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x61,
    0x74,0x61,0x31,0x5b,0x69,0x5d,0x2e,0x7a,0x20,0x2d,0x20,0x5f,0x34,0x33,0x2e,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x64,0x61,0x74,0x61,0x31,0x5b,0x69,0x5d,0x2e,0x77,0x29,
    0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x28,0x28,0x6d,0x61,0x74,0x65,
    0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,
    0x79,0x7a,0x20,0x2a,0x20,0x5f,0x34,0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x73,0x5b,0x69,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,
    0x5f,0x33,0x31,0x39,0x29,0x20,0x2b,0x20,0x28,0x28,0x28,0x6d,0x61,0x74,0x65,0x72,
    0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,
    0x7a,0x20,0x2a,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x2c,0x20,0x5f,0x32,0x32,0x34,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,
    0x20,0x2a,0x20,0x5f,0x34,0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x73,0x5b,0x69,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,0x33,
    0x31,0x39,0x29,0x29,0x20,0x2b,0x20,0x28,0x28,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,
    0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,
    0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x5f,0x32,0x32,0x34,0x20,0x2b,0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,
    0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,
    0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x77,0x29,0x29,0x20,
    0x2a,0x20,0x5f,0x34,0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x73,0x5b,0x69,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,0x33,0x31,
    0x39,0x29,0x29,0x20,0x2a,0x20,0x5f,0x34,0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x64,0x61,0x74,0x61,0x31,0x5b,0x69,0x5d,0x2e,0x78,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,
    0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x36,0x34,0x20,0x3d,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x37,0x31,0x20,0x3d,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x34,0x33,0x2e,0x76,0x69,
    0x65,0x77,0x5f,0x70,0x6f,0x73,0x20,0x2d,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x72,0x65,0x73,0x75,
    0x6c,0x74,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,
    0x20,0x30,0x3b,0x20,0x28,0x69,0x20,0x3c,0x20,0x5f,0x34,0x33,0x2e,0x6e,0x75,0x6d,
    0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x29,0x20,0x26,0x26,0x20,0x28,0x69,0x20,0x3c,
    0x20,0x33,0x32,0x29,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x33,
    0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x79,0x70,0x65,0x73,0x5b,0x69,0x5d,0x2e,
    0x78,0x20,0x3d,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x69,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x33,0x36,0x34,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x33,0x37,0x31,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,
    0x74,0x20,0x2b,0x3d,0x20,0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x65,0x44,0x69,
    0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x61,0x6c,0x4c,0x69,0x67,0x68,0x74,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x33,0x2e,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x74,0x79,0x70,0x65,0x73,0x5b,0x69,0x5d,0x2e,0x78,0x20,0x3d,
    0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,
    0x20,0x69,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,
    0x20,0x3d,0x20,0x5f,0x33,0x36,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,
    0x5f,0x33,0x37,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x2b,0x3d,0x20,
    0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x65,0x50,0x6f,0x69,0x6e,0x74,0x4c,0x69,
    0x67,0x68,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x33,0x2e,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x74,0x79,0x70,0x65,0x73,0x5b,0x69,0x5d,0x2e,0x78,0x20,0x3d,
    0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x69,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x5f,
    0x33,0x36,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x30,0x20,0x3d,0x20,0x5f,0x33,0x37,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,
    0x65,0x73,0x75,0x6c,0x74,0x20,0x2b,0x3d,0x20,0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,
    0x74,0x65,0x53,0x70,0x6f,0x74,0x4c,0x69,0x67,0x68,0x74,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x39,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x2a,0x20,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x5f,0x70,0x61,0x6c,0x65,0x74,0x74,0x65,
    0x32,0x44,0x5f,0x70,0x61,0x6c,0x65,0x74,0x74,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,
    0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x76,
    0x5f,0x6f,0x70,0x61,0x63,0x69,0x74,0x79,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
static inline const sg_shader_desc* main_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_glsl430;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_source_glsl430;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].glsl_name = "aPos";
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].glsl_name = "aNormal";
            desc.attrs[2].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[2].glsl_name = "aTexCoord";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 208;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 13;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params";
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 3088;
            desc.uniform_blocks[1].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT3;
            desc.uniform_blocks[1].glsl_uniforms[0].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[0].glsl_name = "_43.view_pos";
            desc.uniform_blocks[1].glsl_uniforms[1].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[1].glsl_uniforms[1].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[1].glsl_name = "_43.num_lights";
            desc.uniform_blocks[1].glsl_uniforms[2].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[2].array_count = 32;
            desc.uniform_blocks[1].glsl_uniforms[2].glsl_name = "_43.light_positions";
            desc.uniform_blocks[1].glsl_uniforms[3].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[3].array_count = 32;
            desc.uniform_blocks[1].glsl_uniforms[3].glsl_name = "_43.light_directions";
            desc.uniform_blocks[1].glsl_uniforms[4].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[4].array_count = 32;
            desc.uniform_blocks[1].glsl_uniforms[4].glsl_name = "_43.light_colors";
            desc.uniform_blocks[1].glsl_uniforms[5].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[5].array_count = 32;
            desc.uniform_blocks[1].glsl_uniforms[5].glsl_name = "_43.light_data1";
            desc.uniform_blocks[1].glsl_uniforms[6].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[6].array_count = 32;
            desc.uniform_blocks[1].glsl_uniforms[6].glsl_name = "_43.light_data2";
            desc.uniform_blocks[1].glsl_uniforms[7].type = SG_UNIFORMTYPE_INT4;
            desc.uniform_blocks[1].glsl_uniforms[7].array_count = 32;
            desc.uniform_blocks[1].glsl_uniforms[7].glsl_name = "_43.light_types";
            desc.uniform_blocks[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[2].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[2].size = 48;
            desc.uniform_blocks[2].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[2].glsl_uniforms[0].array_count = 3;
            desc.uniform_blocks[2].glsl_uniforms[0].glsl_name = "material_params";
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[0].glsl_name = "_palette2D_palette_smp";
            desc.label = "main_shader";
        }
        return &desc;
    }
    return 0;
}
